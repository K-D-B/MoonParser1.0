0 (0 , 'sstart , ('start',) 0 ('#')),  (1 , 'start , ('external_declaration','start',) 0 ('#')),  (2 , 'start , ('$',) 0 ('#')),  (3 , 'external_declaration , ('declaration',) 0 ('#''char''double''float''function''int')),  (4 , 'external_declaration , ('function_definition',) 0 ('#''char''double''float''function''int')),  (5 , 'type_specifier , ('int',) 0 ('identifier')),  (6 , 'type_specifier , ('float',) 0 ('identifier')),  (7 , 'type_specifier , ('double',) 0 ('identifier')),  (8 , 'type_specifier , ('char',) 0 ('identifier')),  (9 , 'declaration , ('type_specifier','declaration_parameter','declaration_parameter_suffix',';',) 0 ('#''char''double''float''function''int')),  (54 , 'function_definition , ('function','type_specifier','identifier','(','function_parameter_list',')','compound_statement',) 0 ('#''char''double''float''function''int')),  
1 (8 , 'type_specifier , ('char',) 1 ('identifier')),  
2 (3 , 'external_declaration , ('declaration',) 1 ('#''char''double''float''function''int')),  
3 (7 , 'type_specifier , ('double',) 1 ('identifier')),  
4 (1 , 'start , ('external_declaration','start',) 0 ('#')),  (1 , 'start , ('external_declaration','start',) 1 ('#')),  (2 , 'start , ('$',) 0 ('#')),  (3 , 'external_declaration , ('declaration',) 0 ('#''char''double''float''function''int')),  (4 , 'external_declaration , ('function_definition',) 0 ('#''char''double''float''function''int')),  (5 , 'type_specifier , ('int',) 0 ('identifier')),  (6 , 'type_specifier , ('float',) 0 ('identifier')),  (7 , 'type_specifier , ('double',) 0 ('identifier')),  (8 , 'type_specifier , ('char',) 0 ('identifier')),  (9 , 'declaration , ('type_specifier','declaration_parameter','declaration_parameter_suffix',';',) 0 ('#''char''double''float''function''int')),  (54 , 'function_definition , ('function','type_specifier','identifier','(','function_parameter_list',')','compound_statement',) 0 ('#''char''double''float''function''int')),  
5 (6 , 'type_specifier , ('float',) 1 ('identifier')),  
6 (5 , 'type_specifier , ('int',) 0 ('identifier')),  (6 , 'type_specifier , ('float',) 0 ('identifier')),  (7 , 'type_specifier , ('double',) 0 ('identifier')),  (8 , 'type_specifier , ('char',) 0 ('identifier')),  (54 , 'function_definition , ('function','type_specifier','identifier','(','function_parameter_list',')','compound_statement',) 1 ('#''char''double''float''function''int')),  
7 (4 , 'external_declaration , ('function_definition',) 1 ('#''char''double''float''function''int')),  
8 (5 , 'type_specifier , ('int',) 1 ('identifier')),  
9 (0 , 'sstart , ('start',) 1 ('#')),  
10 (9 , 'declaration , ('type_specifier','declaration_parameter','declaration_parameter_suffix',';',) 1 ('#''char''double''float''function''int')),  (10 , 'declaration_parameter , ('identifier','declaration_parameter_assign',) 0 (','';')),  
11 (1 , 'start , ('external_declaration','start',) 2 ('#')),  
12 (54 , 'function_definition , ('function','type_specifier','identifier','(','function_parameter_list',')','compound_statement',) 2 ('#''char''double''float''function''int')),  
13 (9 , 'declaration , ('type_specifier','declaration_parameter','declaration_parameter_suffix',';',) 2 ('#''char''double''float''function''int')),  (13 , 'declaration_parameter_suffix , (',','declaration_parameter','declaration_parameter_suffix',) 0 (';')),  (14 , 'declaration_parameter_suffix , ('$',) 0 (';')),  
14 (10 , 'declaration_parameter , ('identifier','declaration_parameter_assign',) 1 (','';')),  (11 , 'declaration_parameter_assign , ('=','expression',) 0 (','';')),  (12 , 'declaration_parameter_assign , ('$',) 0 (','';')),  
15 (54 , 'function_definition , ('function','type_specifier','identifier','(','function_parameter_list',')','compound_statement',) 3 ('#''char''double''float''function''int')),  
16 (10 , 'declaration_parameter , ('identifier','declaration_parameter_assign',) 0 (','';')),  (13 , 'declaration_parameter_suffix , (',','declaration_parameter','declaration_parameter_suffix',) 1 (';')),  
17 (9 , 'declaration , ('type_specifier','declaration_parameter','declaration_parameter_suffix',';',) 3 ('#''char''double''float''function''int')),  
18 (11 , 'declaration_parameter_assign , ('=','expression',) 1 (','';')),  (15 , 'primary_expression , ('identifier',) 0 ('%''&''(''*''+'',''-''/'';''<''<=''>''>=''^''identifier''number')),  (16 , 'primary_expression , ('number',) 0 ('%''&''(''*''+'',''-''/'';''<''<=''>''>=''^''identifier''number')),  (17 , 'primary_expression , ('(','expression',')',) 0 ('%''&''(''*''+'',''-''/'';''<''<=''>''>=''^''identifier''number')),  (42 , 'expression , ('constant_expression',) 0 (','';')),  (43 , 'expression , ('function_expression',) 0 (','';')),  (44 , 'constant_expression , ('primary_expression','arithmetic_expression',) 0 (','';')),  (49 , 'function_expression , ('function','identifier','(','expression_list',')',) 0 (','';')),  
19 (10 , 'declaration_parameter , ('identifier','declaration_parameter_assign',) 2 (','';')),  
20 (5 , 'type_specifier , ('int',) 0 ('identifier')),  (6 , 'type_specifier , ('float',) 0 ('identifier')),  (7 , 'type_specifier , ('double',) 0 ('identifier')),  (8 , 'type_specifier , ('char',) 0 ('identifier')),  (54 , 'function_definition , ('function','type_specifier','identifier','(','function_parameter_list',')','compound_statement',) 4 ('#''char''double''float''function''int')),  (55 , 'function_parameter_list , ('function_parameter','function_parameter_list_suffix',) 0 (')')),  (56 , 'function_parameter_list , ('$',) 0 (')')),  (59 , 'function_parameter , ('type_specifier','identifier',) 0 (')'',')),  
21 (13 , 'declaration_parameter_suffix , (',','declaration_parameter','declaration_parameter_suffix',) 0 (';')),  (13 , 'declaration_parameter_suffix , (',','declaration_parameter','declaration_parameter_suffix',) 2 (';')),  (14 , 'declaration_parameter_suffix , ('$',) 0 (';')),  
22 (9 , 'declaration , ('type_specifier','declaration_parameter','declaration_parameter_suffix',';',) 4 ('#''char''double''float''function''int')),  
23 (15 , 'primary_expression , ('identifier',) 0 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (16 , 'primary_expression , ('number',) 0 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (17 , 'primary_expression , ('(','expression',')',) 0 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (17 , 'primary_expression , ('(','expression',')',) 1 ('%''&''(''*''+'',''-''/'';''<''<=''>''>=''^''identifier''number')),  (42 , 'expression , ('constant_expression',) 0 (')')),  (43 , 'expression , ('function_expression',) 0 (')')),  (44 , 'constant_expression , ('primary_expression','arithmetic_expression',) 0 (')')),  (49 , 'function_expression , ('function','identifier','(','expression_list',')',) 0 (')')),  
24 (42 , 'expression , ('constant_expression',) 1 (','';')),  
25 (11 , 'declaration_parameter_assign , ('=','expression',) 2 (','';')),  
26 (49 , 'function_expression , ('function','identifier','(','expression_list',')',) 1 (','';')),  
27 (43 , 'expression , ('function_expression',) 1 (','';')),  
28 (15 , 'primary_expression , ('identifier',) 1 ('%''&''(''*''+'',''-''/'';''<''<=''>''>=''^''identifier''number')),  
29 (16 , 'primary_expression , ('number',) 1 ('%''&''(''*''+'',''-''/'';''<''<=''>''>=''^''identifier''number')),  
30 (15 , 'primary_expression , ('identifier',) 0 ('%''&''(''*''+'',''-''/'';''<''<=''>''>=''^''identifier''number')),  (16 , 'primary_expression , ('number',) 0 ('%''&''(''*''+'',''-''/'';''<''<=''>''>=''^''identifier''number')),  (17 , 'primary_expression , ('(','expression',')',) 0 ('%''&''(''*''+'',''-''/'';''<''<=''>''>=''^''identifier''number')),  (18 , 'operator , ('+',) 0 (','';')),  (18 , 'operator , ('+',) 0 ('(''identifier''number')),  (19 , 'operator , ('-',) 0 (','';')),  (19 , 'operator , ('-',) 0 ('(''identifier''number')),  (20 , 'operator , ('*',) 0 (','';')),  (20 , 'operator , ('*',) 0 ('(''identifier''number')),  (21 , 'operator , ('/',) 0 (','';')),  (21 , 'operator , ('/',) 0 ('(''identifier''number')),  (22 , 'operator , ('%',) 0 (','';')),  (22 , 'operator , ('%',) 0 ('(''identifier''number')),  (23 , 'operator , ('<',) 0 (','';')),  (23 , 'operator , ('<',) 0 ('(''identifier''number')),  (24 , 'operator , ('>',) 0 (','';')),  (24 , 'operator , ('>',) 0 ('(''identifier''number')),  (25 , 'operator , ('^',) 0 (','';')),  (25 , 'operator , ('^',) 0 ('(''identifier''number')),  (26 , 'operator , ('&',) 0 (','';')),  (26 , 'operator , ('&',) 0 ('(''identifier''number')),  (27 , 'operator , ('<=',) 0 (','';')),  (27 , 'operator , ('<=',) 0 ('(''identifier''number')),  (28 , 'operator , ('>=',) 0 (','';')),  (28 , 'operator , ('>=',) 0 ('(''identifier''number')),  (44 , 'constant_expression , ('primary_expression','arithmetic_expression',) 1 (','';')),  (45 , 'arithmetic_expression , ('operator',) 0 (','';')),  (46 , 'arithmetic_expression , ('primary_expression','arithmetic_expression',) 0 (','';')),  (47 , 'arithmetic_expression , ('operator','primary_expression','arithmetic_expression',) 0 (','';')),  (48 , 'arithmetic_expression , ('$',) 0 (','';')),  
31 (55 , 'function_parameter_list , ('function_parameter','function_parameter_list_suffix',) 1 (')')),  (57 , 'function_parameter_list_suffix , (',','function_parameter','function_parameter_list_suffix',) 0 (')')),  (58 , 'function_parameter_list_suffix , ('$',) 0 (')')),  
32 (54 , 'function_definition , ('function','type_specifier','identifier','(','function_parameter_list',')','compound_statement',) 5 ('#''char''double''float''function''int')),  
33 (59 , 'function_parameter , ('type_specifier','identifier',) 1 (')'',')),  
34 (13 , 'declaration_parameter_suffix , (',','declaration_parameter','declaration_parameter_suffix',) 3 (';')),  
35 (15 , 'primary_expression , ('identifier',) 0 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (16 , 'primary_expression , ('number',) 0 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (17 , 'primary_expression , ('(','expression',')',) 0 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (17 , 'primary_expression , ('(','expression',')',) 1 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (42 , 'expression , ('constant_expression',) 0 (')')),  (43 , 'expression , ('function_expression',) 0 (')')),  (44 , 'constant_expression , ('primary_expression','arithmetic_expression',) 0 (')')),  (49 , 'function_expression , ('function','identifier','(','expression_list',')',) 0 (')')),  
36 (42 , 'expression , ('constant_expression',) 1 (')')),  
37 (17 , 'primary_expression , ('(','expression',')',) 2 ('%''&''(''*''+'',''-''/'';''<''<=''>''>=''^''identifier''number')),  
38 (49 , 'function_expression , ('function','identifier','(','expression_list',')',) 1 (')')),  
39 (43 , 'expression , ('function_expression',) 1 (')')),  
40 (15 , 'primary_expression , ('identifier',) 1 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  
41 (16 , 'primary_expression , ('number',) 1 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  
42 (15 , 'primary_expression , ('identifier',) 0 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (16 , 'primary_expression , ('number',) 0 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (17 , 'primary_expression , ('(','expression',')',) 0 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (18 , 'operator , ('+',) 0 (')')),  (18 , 'operator , ('+',) 0 ('(''identifier''number')),  (19 , 'operator , ('-',) 0 (')')),  (19 , 'operator , ('-',) 0 ('(''identifier''number')),  (20 , 'operator , ('*',) 0 (')')),  (20 , 'operator , ('*',) 0 ('(''identifier''number')),  (21 , 'operator , ('/',) 0 (')')),  (21 , 'operator , ('/',) 0 ('(''identifier''number')),  (22 , 'operator , ('%',) 0 (')')),  (22 , 'operator , ('%',) 0 ('(''identifier''number')),  (23 , 'operator , ('<',) 0 (')')),  (23 , 'operator , ('<',) 0 ('(''identifier''number')),  (24 , 'operator , ('>',) 0 (')')),  (24 , 'operator , ('>',) 0 ('(''identifier''number')),  (25 , 'operator , ('^',) 0 (')')),  (25 , 'operator , ('^',) 0 ('(''identifier''number')),  (26 , 'operator , ('&',) 0 (')')),  (26 , 'operator , ('&',) 0 ('(''identifier''number')),  (27 , 'operator , ('<=',) 0 (')')),  (27 , 'operator , ('<=',) 0 ('(''identifier''number')),  (28 , 'operator , ('>=',) 0 (')')),  (28 , 'operator , ('>=',) 0 ('(''identifier''number')),  (44 , 'constant_expression , ('primary_expression','arithmetic_expression',) 1 (')')),  (45 , 'arithmetic_expression , ('operator',) 0 (')')),  (46 , 'arithmetic_expression , ('primary_expression','arithmetic_expression',) 0 (')')),  (47 , 'arithmetic_expression , ('operator','primary_expression','arithmetic_expression',) 0 (')')),  (48 , 'arithmetic_expression , ('$',) 0 (')')),  
43 (49 , 'function_expression , ('function','identifier','(','expression_list',')',) 2 (','';')),  
44 (22 , 'operator , ('%',) 1 (','';')),  (22 , 'operator , ('%',) 1 ('(''identifier''number')),  
45 (26 , 'operator , ('&',) 1 (','';')),  (26 , 'operator , ('&',) 1 ('(''identifier''number')),  
46 (20 , 'operator , ('*',) 1 (','';')),  (20 , 'operator , ('*',) 1 ('(''identifier''number')),  
47 (18 , 'operator , ('+',) 1 (','';')),  (18 , 'operator , ('+',) 1 ('(''identifier''number')),  
48 (19 , 'operator , ('-',) 1 (','';')),  (19 , 'operator , ('-',) 1 ('(''identifier''number')),  
49 (21 , 'operator , ('/',) 1 (','';')),  (21 , 'operator , ('/',) 1 ('(''identifier''number')),  
50 (23 , 'operator , ('<',) 1 (','';')),  (23 , 'operator , ('<',) 1 ('(''identifier''number')),  
51 (27 , 'operator , ('<=',) 1 (','';')),  (27 , 'operator , ('<=',) 1 ('(''identifier''number')),  
52 (24 , 'operator , ('>',) 1 (','';')),  (24 , 'operator , ('>',) 1 ('(''identifier''number')),  
53 (28 , 'operator , ('>=',) 1 (','';')),  (28 , 'operator , ('>=',) 1 ('(''identifier''number')),  
54 (25 , 'operator , ('^',) 1 (','';')),  (25 , 'operator , ('^',) 1 ('(''identifier''number')),  
55 (44 , 'constant_expression , ('primary_expression','arithmetic_expression',) 2 (','';')),  
56 (15 , 'primary_expression , ('identifier',) 0 ('%''&''(''*''+'',''-''/'';''<''<=''>''>=''^''identifier''number')),  (16 , 'primary_expression , ('number',) 0 ('%''&''(''*''+'',''-''/'';''<''<=''>''>=''^''identifier''number')),  (17 , 'primary_expression , ('(','expression',')',) 0 ('%''&''(''*''+'',''-''/'';''<''<=''>''>=''^''identifier''number')),  (45 , 'arithmetic_expression , ('operator',) 1 (','';')),  (47 , 'arithmetic_expression , ('operator','primary_expression','arithmetic_expression',) 1 (','';')),  
57 (15 , 'primary_expression , ('identifier',) 0 ('%''&''(''*''+'',''-''/'';''<''<=''>''>=''^''identifier''number')),  (16 , 'primary_expression , ('number',) 0 ('%''&''(''*''+'',''-''/'';''<''<=''>''>=''^''identifier''number')),  (17 , 'primary_expression , ('(','expression',')',) 0 ('%''&''(''*''+'',''-''/'';''<''<=''>''>=''^''identifier''number')),  (18 , 'operator , ('+',) 0 (','';')),  (18 , 'operator , ('+',) 0 ('(''identifier''number')),  (19 , 'operator , ('-',) 0 (','';')),  (19 , 'operator , ('-',) 0 ('(''identifier''number')),  (20 , 'operator , ('*',) 0 (','';')),  (20 , 'operator , ('*',) 0 ('(''identifier''number')),  (21 , 'operator , ('/',) 0 (','';')),  (21 , 'operator , ('/',) 0 ('(''identifier''number')),  (22 , 'operator , ('%',) 0 (','';')),  (22 , 'operator , ('%',) 0 ('(''identifier''number')),  (23 , 'operator , ('<',) 0 (','';')),  (23 , 'operator , ('<',) 0 ('(''identifier''number')),  (24 , 'operator , ('>',) 0 (','';')),  (24 , 'operator , ('>',) 0 ('(''identifier''number')),  (25 , 'operator , ('^',) 0 (','';')),  (25 , 'operator , ('^',) 0 ('(''identifier''number')),  (26 , 'operator , ('&',) 0 (','';')),  (26 , 'operator , ('&',) 0 ('(''identifier''number')),  (27 , 'operator , ('<=',) 0 (','';')),  (27 , 'operator , ('<=',) 0 ('(''identifier''number')),  (28 , 'operator , ('>=',) 0 (','';')),  (28 , 'operator , ('>=',) 0 ('(''identifier''number')),  (45 , 'arithmetic_expression , ('operator',) 0 (','';')),  (46 , 'arithmetic_expression , ('primary_expression','arithmetic_expression',) 0 (','';')),  (46 , 'arithmetic_expression , ('primary_expression','arithmetic_expression',) 1 (','';')),  (47 , 'arithmetic_expression , ('operator','primary_expression','arithmetic_expression',) 0 (','';')),  (48 , 'arithmetic_expression , ('$',) 0 (','';')),  
58 (5 , 'type_specifier , ('int',) 0 ('identifier')),  (6 , 'type_specifier , ('float',) 0 ('identifier')),  (7 , 'type_specifier , ('double',) 0 ('identifier')),  (8 , 'type_specifier , ('char',) 0 ('identifier')),  (57 , 'function_parameter_list_suffix , (',','function_parameter','function_parameter_list_suffix',) 1 (')')),  (59 , 'function_parameter , ('type_specifier','identifier',) 0 (')'',')),  
59 (55 , 'function_parameter_list , ('function_parameter','function_parameter_list_suffix',) 2 (')')),  
60 (54 , 'function_definition , ('function','type_specifier','identifier','(','function_parameter_list',')','compound_statement',) 6 ('#''char''double''float''function''int')),  (60 , 'compound_statement , ('{','statement_list','}',) 0 ('#''char''double''float''function''int')),  
61 (59 , 'function_parameter , ('type_specifier','identifier',) 2 (')'',')),  
62 (17 , 'primary_expression , ('(','expression',')',) 2 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  
63 (17 , 'primary_expression , ('(','expression',')',) 3 ('%''&''(''*''+'',''-''/'';''<''<=''>''>=''^''identifier''number')),  
64 (49 , 'function_expression , ('function','identifier','(','expression_list',')',) 2 (')')),  
65 (22 , 'operator , ('%',) 1 (')')),  (22 , 'operator , ('%',) 1 ('(''identifier''number')),  
66 (26 , 'operator , ('&',) 1 (')')),  (26 , 'operator , ('&',) 1 ('(''identifier''number')),  
67 (20 , 'operator , ('*',) 1 (')')),  (20 , 'operator , ('*',) 1 ('(''identifier''number')),  
68 (18 , 'operator , ('+',) 1 (')')),  (18 , 'operator , ('+',) 1 ('(''identifier''number')),  
69 (19 , 'operator , ('-',) 1 (')')),  (19 , 'operator , ('-',) 1 ('(''identifier''number')),  
70 (21 , 'operator , ('/',) 1 (')')),  (21 , 'operator , ('/',) 1 ('(''identifier''number')),  
71 (23 , 'operator , ('<',) 1 (')')),  (23 , 'operator , ('<',) 1 ('(''identifier''number')),  
72 (27 , 'operator , ('<=',) 1 (')')),  (27 , 'operator , ('<=',) 1 ('(''identifier''number')),  
73 (24 , 'operator , ('>',) 1 (')')),  (24 , 'operator , ('>',) 1 ('(''identifier''number')),  
74 (28 , 'operator , ('>=',) 1 (')')),  (28 , 'operator , ('>=',) 1 ('(''identifier''number')),  
75 (25 , 'operator , ('^',) 1 (')')),  (25 , 'operator , ('^',) 1 ('(''identifier''number')),  
76 (44 , 'constant_expression , ('primary_expression','arithmetic_expression',) 2 (')')),  
77 (15 , 'primary_expression , ('identifier',) 0 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (16 , 'primary_expression , ('number',) 0 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (17 , 'primary_expression , ('(','expression',')',) 0 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (45 , 'arithmetic_expression , ('operator',) 1 (')')),  (47 , 'arithmetic_expression , ('operator','primary_expression','arithmetic_expression',) 1 (')')),  
78 (15 , 'primary_expression , ('identifier',) 0 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (16 , 'primary_expression , ('number',) 0 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (17 , 'primary_expression , ('(','expression',')',) 0 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (18 , 'operator , ('+',) 0 (')')),  (18 , 'operator , ('+',) 0 ('(''identifier''number')),  (19 , 'operator , ('-',) 0 (')')),  (19 , 'operator , ('-',) 0 ('(''identifier''number')),  (20 , 'operator , ('*',) 0 (')')),  (20 , 'operator , ('*',) 0 ('(''identifier''number')),  (21 , 'operator , ('/',) 0 (')')),  (21 , 'operator , ('/',) 0 ('(''identifier''number')),  (22 , 'operator , ('%',) 0 (')')),  (22 , 'operator , ('%',) 0 ('(''identifier''number')),  (23 , 'operator , ('<',) 0 (')')),  (23 , 'operator , ('<',) 0 ('(''identifier''number')),  (24 , 'operator , ('>',) 0 (')')),  (24 , 'operator , ('>',) 0 ('(''identifier''number')),  (25 , 'operator , ('^',) 0 (')')),  (25 , 'operator , ('^',) 0 ('(''identifier''number')),  (26 , 'operator , ('&',) 0 (')')),  (26 , 'operator , ('&',) 0 ('(''identifier''number')),  (27 , 'operator , ('<=',) 0 (')')),  (27 , 'operator , ('<=',) 0 ('(''identifier''number')),  (28 , 'operator , ('>=',) 0 (')')),  (28 , 'operator , ('>=',) 0 ('(''identifier''number')),  (45 , 'arithmetic_expression , ('operator',) 0 (')')),  (46 , 'arithmetic_expression , ('primary_expression','arithmetic_expression',) 0 (')')),  (46 , 'arithmetic_expression , ('primary_expression','arithmetic_expression',) 1 (')')),  (47 , 'arithmetic_expression , ('operator','primary_expression','arithmetic_expression',) 0 (')')),  (48 , 'arithmetic_expression , ('$',) 0 (')')),  
79 (15 , 'primary_expression , ('identifier',) 0 ('%''&''('')''*''+'',''-''/''<''<=''>''>=''^''identifier''number')),  (16 , 'primary_expression , ('number',) 0 ('%''&''('')''*''+'',''-''/''<''<=''>''>=''^''identifier''number')),  (17 , 'primary_expression , ('(','expression',')',) 0 ('%''&''('')''*''+'',''-''/''<''<=''>''>=''^''identifier''number')),  (42 , 'expression , ('constant_expression',) 0 (')'',')),  (43 , 'expression , ('function_expression',) 0 (')'',')),  (44 , 'constant_expression , ('primary_expression','arithmetic_expression',) 0 (')'',')),  (49 , 'function_expression , ('function','identifier','(','expression_list',')',) 0 (')'',')),  (49 , 'function_expression , ('function','identifier','(','expression_list',')',) 3 (','';')),  (52 , 'expression_list , ('expression','expression_list_suffix',) 0 (')')),  (53 , 'expression_list , ('$',) 0 (')')),  
80 (15 , 'primary_expression , ('identifier',) 0 ('%''&''(''*''+'',''-''/'';''<''<=''>''>=''^''identifier''number')),  (16 , 'primary_expression , ('number',) 0 ('%''&''(''*''+'',''-''/'';''<''<=''>''>=''^''identifier''number')),  (17 , 'primary_expression , ('(','expression',')',) 0 ('%''&''(''*''+'',''-''/'';''<''<=''>''>=''^''identifier''number')),  (18 , 'operator , ('+',) 0 (','';')),  (18 , 'operator , ('+',) 0 ('(''identifier''number')),  (19 , 'operator , ('-',) 0 (','';')),  (19 , 'operator , ('-',) 0 ('(''identifier''number')),  (20 , 'operator , ('*',) 0 (','';')),  (20 , 'operator , ('*',) 0 ('(''identifier''number')),  (21 , 'operator , ('/',) 0 (','';')),  (21 , 'operator , ('/',) 0 ('(''identifier''number')),  (22 , 'operator , ('%',) 0 (','';')),  (22 , 'operator , ('%',) 0 ('(''identifier''number')),  (23 , 'operator , ('<',) 0 (','';')),  (23 , 'operator , ('<',) 0 ('(''identifier''number')),  (24 , 'operator , ('>',) 0 (','';')),  (24 , 'operator , ('>',) 0 ('(''identifier''number')),  (25 , 'operator , ('^',) 0 (','';')),  (25 , 'operator , ('^',) 0 ('(''identifier''number')),  (26 , 'operator , ('&',) 0 (','';')),  (26 , 'operator , ('&',) 0 ('(''identifier''number')),  (27 , 'operator , ('<=',) 0 (','';')),  (27 , 'operator , ('<=',) 0 ('(''identifier''number')),  (28 , 'operator , ('>=',) 0 (','';')),  (28 , 'operator , ('>=',) 0 ('(''identifier''number')),  (45 , 'arithmetic_expression , ('operator',) 0 (','';')),  (46 , 'arithmetic_expression , ('primary_expression','arithmetic_expression',) 0 (','';')),  (47 , 'arithmetic_expression , ('operator','primary_expression','arithmetic_expression',) 0 (','';')),  (47 , 'arithmetic_expression , ('operator','primary_expression','arithmetic_expression',) 2 (','';')),  (48 , 'arithmetic_expression , ('$',) 0 (','';')),  
81 (46 , 'arithmetic_expression , ('primary_expression','arithmetic_expression',) 2 (','';')),  
82 (57 , 'function_parameter_list_suffix , (',','function_parameter','function_parameter_list_suffix',) 0 (')')),  (57 , 'function_parameter_list_suffix , (',','function_parameter','function_parameter_list_suffix',) 2 (')')),  (58 , 'function_parameter_list_suffix , ('$',) 0 (')')),  
83 (54 , 'function_definition , ('function','type_specifier','identifier','(','function_parameter_list',')','compound_statement',) 7 ('#''char''double''float''function''int')),  
84 (5 , 'type_specifier , ('int',) 0 ('identifier')),  (6 , 'type_specifier , ('float',) 0 ('identifier')),  (7 , 'type_specifier , ('double',) 0 ('identifier')),  (8 , 'type_specifier , ('char',) 0 ('identifier')),  (9 , 'declaration , ('type_specifier','declaration_parameter','declaration_parameter_suffix',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (37 , 'assignment_expression , ('identifier','assignment_operator','expression',) 0 (','';')),  (40 , 'assignment_expression_list , ('assignment_expression','assignment_expression_list_suffix',) 0 (';')),  (41 , 'assignment_expression_list , ('$',) 0 (';')),  (60 , 'compound_statement , ('{','statement_list','}',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (60 , 'compound_statement , ('{','statement_list','}',) 1 ('#''char''double''float''function''int')),  (61 , 'statement_list , ('statement','statement_list',) 0 ('}')),  (62 , 'statement_list , ('$',) 0 ('}')),  (63 , 'statement , ('expression_statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (64 , 'statement , ('jump_statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (65 , 'statement , ('selection_statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (66 , 'statement , ('iteration_statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (67 , 'statement , ('compound_statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (68 , 'statement , ('declaration',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (69 , 'expression_statement , ('assignment_expression_list',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (70 , 'expression_statement , ('print','(','expression',')',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (71 , 'expression_statement , ('scanf','(','identifier',')',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (72 , 'jump_statement , ('continue',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (73 , 'jump_statement , ('break',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (74 , 'jump_statement , ('return','expression',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (75 , 'selection_statement , ('if','(','expression',')','statement','else','statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (76 , 'iteration_statement , ('while','(','expression',')','statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (77 , 'iteration_statement , ('for','(','declaration','expression',';','assignment_expression',')','statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
85 (17 , 'primary_expression , ('(','expression',')',) 3 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  
86 (15 , 'primary_expression , ('identifier',) 0 ('%''&''('')''*''+'',''-''/''<''<=''>''>=''^''identifier''number')),  (16 , 'primary_expression , ('number',) 0 ('%''&''('')''*''+'',''-''/''<''<=''>''>=''^''identifier''number')),  (17 , 'primary_expression , ('(','expression',')',) 0 ('%''&''('')''*''+'',''-''/''<''<=''>''>=''^''identifier''number')),  (42 , 'expression , ('constant_expression',) 0 (')'',')),  (43 , 'expression , ('function_expression',) 0 (')'',')),  (44 , 'constant_expression , ('primary_expression','arithmetic_expression',) 0 (')'',')),  (49 , 'function_expression , ('function','identifier','(','expression_list',')',) 0 (')'',')),  (49 , 'function_expression , ('function','identifier','(','expression_list',')',) 3 (')')),  (52 , 'expression_list , ('expression','expression_list_suffix',) 0 (')')),  (53 , 'expression_list , ('$',) 0 (')')),  
87 (15 , 'primary_expression , ('identifier',) 0 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (16 , 'primary_expression , ('number',) 0 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (17 , 'primary_expression , ('(','expression',')',) 0 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (18 , 'operator , ('+',) 0 (')')),  (18 , 'operator , ('+',) 0 ('(''identifier''number')),  (19 , 'operator , ('-',) 0 (')')),  (19 , 'operator , ('-',) 0 ('(''identifier''number')),  (20 , 'operator , ('*',) 0 (')')),  (20 , 'operator , ('*',) 0 ('(''identifier''number')),  (21 , 'operator , ('/',) 0 (')')),  (21 , 'operator , ('/',) 0 ('(''identifier''number')),  (22 , 'operator , ('%',) 0 (')')),  (22 , 'operator , ('%',) 0 ('(''identifier''number')),  (23 , 'operator , ('<',) 0 (')')),  (23 , 'operator , ('<',) 0 ('(''identifier''number')),  (24 , 'operator , ('>',) 0 (')')),  (24 , 'operator , ('>',) 0 ('(''identifier''number')),  (25 , 'operator , ('^',) 0 (')')),  (25 , 'operator , ('^',) 0 ('(''identifier''number')),  (26 , 'operator , ('&',) 0 (')')),  (26 , 'operator , ('&',) 0 ('(''identifier''number')),  (27 , 'operator , ('<=',) 0 (')')),  (27 , 'operator , ('<=',) 0 ('(''identifier''number')),  (28 , 'operator , ('>=',) 0 (')')),  (28 , 'operator , ('>=',) 0 ('(''identifier''number')),  (45 , 'arithmetic_expression , ('operator',) 0 (')')),  (46 , 'arithmetic_expression , ('primary_expression','arithmetic_expression',) 0 (')')),  (47 , 'arithmetic_expression , ('operator','primary_expression','arithmetic_expression',) 0 (')')),  (47 , 'arithmetic_expression , ('operator','primary_expression','arithmetic_expression',) 2 (')')),  (48 , 'arithmetic_expression , ('$',) 0 (')')),  
88 (46 , 'arithmetic_expression , ('primary_expression','arithmetic_expression',) 2 (')')),  
89 (15 , 'primary_expression , ('identifier',) 0 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (16 , 'primary_expression , ('number',) 0 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (17 , 'primary_expression , ('(','expression',')',) 0 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (17 , 'primary_expression , ('(','expression',')',) 1 ('%''&''('')''*''+'',''-''/''<''<=''>''>=''^''identifier''number')),  (42 , 'expression , ('constant_expression',) 0 (')')),  (43 , 'expression , ('function_expression',) 0 (')')),  (44 , 'constant_expression , ('primary_expression','arithmetic_expression',) 0 (')')),  (49 , 'function_expression , ('function','identifier','(','expression_list',')',) 0 (')')),  
90 (42 , 'expression , ('constant_expression',) 1 (')'',')),  
91 (50 , 'expression_list_suffix , (',','expression','expression_list_suffix',) 0 (')')),  (51 , 'expression_list_suffix , ('$',) 0 (')')),  (52 , 'expression_list , ('expression','expression_list_suffix',) 1 (')')),  
92 (49 , 'function_expression , ('function','identifier','(','expression_list',')',) 4 (','';')),  
93 (49 , 'function_expression , ('function','identifier','(','expression_list',')',) 1 (')'',')),  
94 (43 , 'expression , ('function_expression',) 1 (')'',')),  
95 (15 , 'primary_expression , ('identifier',) 1 ('%''&''('')''*''+'',''-''/''<''<=''>''>=''^''identifier''number')),  
96 (16 , 'primary_expression , ('number',) 1 ('%''&''('')''*''+'',''-''/''<''<=''>''>=''^''identifier''number')),  
97 (15 , 'primary_expression , ('identifier',) 0 ('%''&''('')''*''+'',''-''/''<''<=''>''>=''^''identifier''number')),  (16 , 'primary_expression , ('number',) 0 ('%''&''('')''*''+'',''-''/''<''<=''>''>=''^''identifier''number')),  (17 , 'primary_expression , ('(','expression',')',) 0 ('%''&''('')''*''+'',''-''/''<''<=''>''>=''^''identifier''number')),  (18 , 'operator , ('+',) 0 (')'',')),  (18 , 'operator , ('+',) 0 ('(''identifier''number')),  (19 , 'operator , ('-',) 0 (')'',')),  (19 , 'operator , ('-',) 0 ('(''identifier''number')),  (20 , 'operator , ('*',) 0 (')'',')),  (20 , 'operator , ('*',) 0 ('(''identifier''number')),  (21 , 'operator , ('/',) 0 (')'',')),  (21 , 'operator , ('/',) 0 ('(''identifier''number')),  (22 , 'operator , ('%',) 0 (')'',')),  (22 , 'operator , ('%',) 0 ('(''identifier''number')),  (23 , 'operator , ('<',) 0 (')'',')),  (23 , 'operator , ('<',) 0 ('(''identifier''number')),  (24 , 'operator , ('>',) 0 (')'',')),  (24 , 'operator , ('>',) 0 ('(''identifier''number')),  (25 , 'operator , ('^',) 0 (')'',')),  (25 , 'operator , ('^',) 0 ('(''identifier''number')),  (26 , 'operator , ('&',) 0 (')'',')),  (26 , 'operator , ('&',) 0 ('(''identifier''number')),  (27 , 'operator , ('<=',) 0 (')'',')),  (27 , 'operator , ('<=',) 0 ('(''identifier''number')),  (28 , 'operator , ('>=',) 0 (')'',')),  (28 , 'operator , ('>=',) 0 ('(''identifier''number')),  (44 , 'constant_expression , ('primary_expression','arithmetic_expression',) 1 (')'',')),  (45 , 'arithmetic_expression , ('operator',) 0 (')'',')),  (46 , 'arithmetic_expression , ('primary_expression','arithmetic_expression',) 0 (')'',')),  (47 , 'arithmetic_expression , ('operator','primary_expression','arithmetic_expression',) 0 (')'',')),  (48 , 'arithmetic_expression , ('$',) 0 (')'',')),  
98 (47 , 'arithmetic_expression , ('operator','primary_expression','arithmetic_expression',) 3 (','';')),  
99 (57 , 'function_parameter_list_suffix , (',','function_parameter','function_parameter_list_suffix',) 3 (')')),  
100 (38 , 'assignment_expression_list_suffix , (',','assignment_expression','assignment_expression_list_suffix',) 0 (';')),  (39 , 'assignment_expression_list_suffix , ('$',) 0 (';')),  (40 , 'assignment_expression_list , ('assignment_expression','assignment_expression_list_suffix',) 1 (';')),  
101 (69 , 'expression_statement , ('assignment_expression_list',';',) 1 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
102 (73 , 'jump_statement , ('break',';',) 1 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
103 (67 , 'statement , ('compound_statement',) 1 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
104 (72 , 'jump_statement , ('continue',';',) 1 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
105 (68 , 'statement , ('declaration',) 1 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
106 (63 , 'statement , ('expression_statement',) 1 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
107 (77 , 'iteration_statement , ('for','(','declaration','expression',';','assignment_expression',')','statement',) 1 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
108 (29 , 'assignment_operator , ('=',) 0 ('(''function''identifier''number')),  (30 , 'assignment_operator , ('+','=',) 0 ('(''function''identifier''number')),  (31 , 'assignment_operator , ('-','=',) 0 ('(''function''identifier''number')),  (32 , 'assignment_operator , ('*','=',) 0 ('(''function''identifier''number')),  (33 , 'assignment_operator , ('/','=',) 0 ('(''function''identifier''number')),  (34 , 'assignment_operator , ('%','=',) 0 ('(''function''identifier''number')),  (35 , 'assignment_operator , ('^','=',) 0 ('(''function''identifier''number')),  (36 , 'assignment_operator , ('&','=',) 0 ('(''function''identifier''number')),  (37 , 'assignment_expression , ('identifier','assignment_operator','expression',) 1 (','';')),  
109 (75 , 'selection_statement , ('if','(','expression',')','statement','else','statement',) 1 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
110 (66 , 'statement , ('iteration_statement',) 1 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
111 (64 , 'statement , ('jump_statement',) 1 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
112 (70 , 'expression_statement , ('print','(','expression',')',';',) 1 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
113 (15 , 'primary_expression , ('identifier',) 0 ('%''&''(''*''+''-''/'';''<''<=''>''>=''^''identifier''number')),  (16 , 'primary_expression , ('number',) 0 ('%''&''(''*''+''-''/'';''<''<=''>''>=''^''identifier''number')),  (17 , 'primary_expression , ('(','expression',')',) 0 ('%''&''(''*''+''-''/'';''<''<=''>''>=''^''identifier''number')),  (42 , 'expression , ('constant_expression',) 0 (';')),  (43 , 'expression , ('function_expression',) 0 (';')),  (44 , 'constant_expression , ('primary_expression','arithmetic_expression',) 0 (';')),  (49 , 'function_expression , ('function','identifier','(','expression_list',')',) 0 (';')),  (74 , 'jump_statement , ('return','expression',';',) 1 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
114 (71 , 'expression_statement , ('scanf','(','identifier',')',';',) 1 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
115 (65 , 'statement , ('selection_statement',) 1 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
116 (5 , 'type_specifier , ('int',) 0 ('identifier')),  (6 , 'type_specifier , ('float',) 0 ('identifier')),  (7 , 'type_specifier , ('double',) 0 ('identifier')),  (8 , 'type_specifier , ('char',) 0 ('identifier')),  (9 , 'declaration , ('type_specifier','declaration_parameter','declaration_parameter_suffix',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (37 , 'assignment_expression , ('identifier','assignment_operator','expression',) 0 (','';')),  (40 , 'assignment_expression_list , ('assignment_expression','assignment_expression_list_suffix',) 0 (';')),  (41 , 'assignment_expression_list , ('$',) 0 (';')),  (60 , 'compound_statement , ('{','statement_list','}',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (61 , 'statement_list , ('statement','statement_list',) 0 ('}')),  (61 , 'statement_list , ('statement','statement_list',) 1 ('}')),  (62 , 'statement_list , ('$',) 0 ('}')),  (63 , 'statement , ('expression_statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (64 , 'statement , ('jump_statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (65 , 'statement , ('selection_statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (66 , 'statement , ('iteration_statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (67 , 'statement , ('compound_statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (68 , 'statement , ('declaration',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (69 , 'expression_statement , ('assignment_expression_list',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (70 , 'expression_statement , ('print','(','expression',')',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (71 , 'expression_statement , ('scanf','(','identifier',')',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (72 , 'jump_statement , ('continue',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (73 , 'jump_statement , ('break',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (74 , 'jump_statement , ('return','expression',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (75 , 'selection_statement , ('if','(','expression',')','statement','else','statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (76 , 'iteration_statement , ('while','(','expression',')','statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (77 , 'iteration_statement , ('for','(','declaration','expression',';','assignment_expression',')','statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
117 (60 , 'compound_statement , ('{','statement_list','}',) 2 ('#''char''double''float''function''int')),  
118 (9 , 'declaration , ('type_specifier','declaration_parameter','declaration_parameter_suffix',';',) 1 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (10 , 'declaration_parameter , ('identifier','declaration_parameter_assign',) 0 (','';')),  
119 (76 , 'iteration_statement , ('while','(','expression',')','statement',) 1 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
120 (5 , 'type_specifier , ('int',) 0 ('identifier')),  (6 , 'type_specifier , ('float',) 0 ('identifier')),  (7 , 'type_specifier , ('double',) 0 ('identifier')),  (8 , 'type_specifier , ('char',) 0 ('identifier')),  (9 , 'declaration , ('type_specifier','declaration_parameter','declaration_parameter_suffix',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (37 , 'assignment_expression , ('identifier','assignment_operator','expression',) 0 (','';')),  (40 , 'assignment_expression_list , ('assignment_expression','assignment_expression_list_suffix',) 0 (';')),  (41 , 'assignment_expression_list , ('$',) 0 (';')),  (60 , 'compound_statement , ('{','statement_list','}',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (60 , 'compound_statement , ('{','statement_list','}',) 1 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (61 , 'statement_list , ('statement','statement_list',) 0 ('}')),  (62 , 'statement_list , ('$',) 0 ('}')),  (63 , 'statement , ('expression_statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (64 , 'statement , ('jump_statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (65 , 'statement , ('selection_statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (66 , 'statement , ('iteration_statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (67 , 'statement , ('compound_statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (68 , 'statement , ('declaration',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (69 , 'expression_statement , ('assignment_expression_list',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (70 , 'expression_statement , ('print','(','expression',')',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (71 , 'expression_statement , ('scanf','(','identifier',')',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (72 , 'jump_statement , ('continue',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (73 , 'jump_statement , ('break',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (74 , 'jump_statement , ('return','expression',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (75 , 'selection_statement , ('if','(','expression',')','statement','else','statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (76 , 'iteration_statement , ('while','(','expression',')','statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (77 , 'iteration_statement , ('for','(','declaration','expression',';','assignment_expression',')','statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
121 (49 , 'function_expression , ('function','identifier','(','expression_list',')',) 4 (')')),  
122 (47 , 'arithmetic_expression , ('operator','primary_expression','arithmetic_expression',) 3 (')')),  
123 (17 , 'primary_expression , ('(','expression',')',) 2 ('%''&''('')''*''+'',''-''/''<''<=''>''>=''^''identifier''number')),  
124 (15 , 'primary_expression , ('identifier',) 0 ('%''&''('')''*''+'',''-''/''<''<=''>''>=''^''identifier''number')),  (16 , 'primary_expression , ('number',) 0 ('%''&''('')''*''+'',''-''/''<''<=''>''>=''^''identifier''number')),  (17 , 'primary_expression , ('(','expression',')',) 0 ('%''&''('')''*''+'',''-''/''<''<=''>''>=''^''identifier''number')),  (42 , 'expression , ('constant_expression',) 0 (')'',')),  (43 , 'expression , ('function_expression',) 0 (')'',')),  (44 , 'constant_expression , ('primary_expression','arithmetic_expression',) 0 (')'',')),  (49 , 'function_expression , ('function','identifier','(','expression_list',')',) 0 (')'',')),  (50 , 'expression_list_suffix , (',','expression','expression_list_suffix',) 1 (')')),  
125 (52 , 'expression_list , ('expression','expression_list_suffix',) 2 (')')),  
126 (49 , 'function_expression , ('function','identifier','(','expression_list',')',) 5 (','';')),  
127 (49 , 'function_expression , ('function','identifier','(','expression_list',')',) 2 (')'',')),  
128 (22 , 'operator , ('%',) 1 (')'',')),  (22 , 'operator , ('%',) 1 ('(''identifier''number')),  
129 (26 , 'operator , ('&',) 1 (')'',')),  (26 , 'operator , ('&',) 1 ('(''identifier''number')),  
130 (20 , 'operator , ('*',) 1 (')'',')),  (20 , 'operator , ('*',) 1 ('(''identifier''number')),  
131 (18 , 'operator , ('+',) 1 (')'',')),  (18 , 'operator , ('+',) 1 ('(''identifier''number')),  
132 (19 , 'operator , ('-',) 1 (')'',')),  (19 , 'operator , ('-',) 1 ('(''identifier''number')),  
133 (21 , 'operator , ('/',) 1 (')'',')),  (21 , 'operator , ('/',) 1 ('(''identifier''number')),  
134 (23 , 'operator , ('<',) 1 (')'',')),  (23 , 'operator , ('<',) 1 ('(''identifier''number')),  
135 (27 , 'operator , ('<=',) 1 (')'',')),  (27 , 'operator , ('<=',) 1 ('(''identifier''number')),  
136 (24 , 'operator , ('>',) 1 (')'',')),  (24 , 'operator , ('>',) 1 ('(''identifier''number')),  
137 (28 , 'operator , ('>=',) 1 (')'',')),  (28 , 'operator , ('>=',) 1 ('(''identifier''number')),  
138 (25 , 'operator , ('^',) 1 (')'',')),  (25 , 'operator , ('^',) 1 ('(''identifier''number')),  
139 (44 , 'constant_expression , ('primary_expression','arithmetic_expression',) 2 (')'',')),  
140 (15 , 'primary_expression , ('identifier',) 0 ('%''&''('')''*''+'',''-''/''<''<=''>''>=''^''identifier''number')),  (16 , 'primary_expression , ('number',) 0 ('%''&''('')''*''+'',''-''/''<''<=''>''>=''^''identifier''number')),  (17 , 'primary_expression , ('(','expression',')',) 0 ('%''&''('')''*''+'',''-''/''<''<=''>''>=''^''identifier''number')),  (45 , 'arithmetic_expression , ('operator',) 1 (')'',')),  (47 , 'arithmetic_expression , ('operator','primary_expression','arithmetic_expression',) 1 (')'',')),  
141 (15 , 'primary_expression , ('identifier',) 0 ('%''&''('')''*''+'',''-''/''<''<=''>''>=''^''identifier''number')),  (16 , 'primary_expression , ('number',) 0 ('%''&''('')''*''+'',''-''/''<''<=''>''>=''^''identifier''number')),  (17 , 'primary_expression , ('(','expression',')',) 0 ('%''&''('')''*''+'',''-''/''<''<=''>''>=''^''identifier''number')),  (18 , 'operator , ('+',) 0 (')'',')),  (18 , 'operator , ('+',) 0 ('(''identifier''number')),  (19 , 'operator , ('-',) 0 (')'',')),  (19 , 'operator , ('-',) 0 ('(''identifier''number')),  (20 , 'operator , ('*',) 0 (')'',')),  (20 , 'operator , ('*',) 0 ('(''identifier''number')),  (21 , 'operator , ('/',) 0 (')'',')),  (21 , 'operator , ('/',) 0 ('(''identifier''number')),  (22 , 'operator , ('%',) 0 (')'',')),  (22 , 'operator , ('%',) 0 ('(''identifier''number')),  (23 , 'operator , ('<',) 0 (')'',')),  (23 , 'operator , ('<',) 0 ('(''identifier''number')),  (24 , 'operator , ('>',) 0 (')'',')),  (24 , 'operator , ('>',) 0 ('(''identifier''number')),  (25 , 'operator , ('^',) 0 (')'',')),  (25 , 'operator , ('^',) 0 ('(''identifier''number')),  (26 , 'operator , ('&',) 0 (')'',')),  (26 , 'operator , ('&',) 0 ('(''identifier''number')),  (27 , 'operator , ('<=',) 0 (')'',')),  (27 , 'operator , ('<=',) 0 ('(''identifier''number')),  (28 , 'operator , ('>=',) 0 (')'',')),  (28 , 'operator , ('>=',) 0 ('(''identifier''number')),  (45 , 'arithmetic_expression , ('operator',) 0 (')'',')),  (46 , 'arithmetic_expression , ('primary_expression','arithmetic_expression',) 0 (')'',')),  (46 , 'arithmetic_expression , ('primary_expression','arithmetic_expression',) 1 (')'',')),  (47 , 'arithmetic_expression , ('operator','primary_expression','arithmetic_expression',) 0 (')'',')),  (48 , 'arithmetic_expression , ('$',) 0 (')'',')),  
142 (37 , 'assignment_expression , ('identifier','assignment_operator','expression',) 0 (','';')),  (38 , 'assignment_expression_list_suffix , (',','assignment_expression','assignment_expression_list_suffix',) 1 (';')),  
143 (40 , 'assignment_expression_list , ('assignment_expression','assignment_expression_list_suffix',) 2 (';')),  
144 (69 , 'expression_statement , ('assignment_expression_list',';',) 2 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
145 (73 , 'jump_statement , ('break',';',) 2 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
146 (72 , 'jump_statement , ('continue',';',) 2 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
147 (5 , 'type_specifier , ('int',) 0 ('identifier')),  (6 , 'type_specifier , ('float',) 0 ('identifier')),  (7 , 'type_specifier , ('double',) 0 ('identifier')),  (8 , 'type_specifier , ('char',) 0 ('identifier')),  (9 , 'declaration , ('type_specifier','declaration_parameter','declaration_parameter_suffix',';',) 0 ('(''function''identifier''number')),  (77 , 'iteration_statement , ('for','(','declaration','expression',';','assignment_expression',')','statement',) 2 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
148 (34 , 'assignment_operator , ('%','=',) 1 ('(''function''identifier''number')),  
149 (36 , 'assignment_operator , ('&','=',) 1 ('(''function''identifier''number')),  
150 (32 , 'assignment_operator , ('*','=',) 1 ('(''function''identifier''number')),  
151 (30 , 'assignment_operator , ('+','=',) 1 ('(''function''identifier''number')),  
152 (31 , 'assignment_operator , ('-','=',) 1 ('(''function''identifier''number')),  
153 (33 , 'assignment_operator , ('/','=',) 1 ('(''function''identifier''number')),  
154 (29 , 'assignment_operator , ('=',) 1 ('(''function''identifier''number')),  
155 (35 , 'assignment_operator , ('^','=',) 1 ('(''function''identifier''number')),  
156 (15 , 'primary_expression , ('identifier',) 0 ('%''&''(''*''+'',''-''/'';''<''<=''>''>=''^''identifier''number')),  (16 , 'primary_expression , ('number',) 0 ('%''&''(''*''+'',''-''/'';''<''<=''>''>=''^''identifier''number')),  (17 , 'primary_expression , ('(','expression',')',) 0 ('%''&''(''*''+'',''-''/'';''<''<=''>''>=''^''identifier''number')),  (37 , 'assignment_expression , ('identifier','assignment_operator','expression',) 2 (','';')),  (42 , 'expression , ('constant_expression',) 0 (','';')),  (43 , 'expression , ('function_expression',) 0 (','';')),  (44 , 'constant_expression , ('primary_expression','arithmetic_expression',) 0 (','';')),  (49 , 'function_expression , ('function','identifier','(','expression_list',')',) 0 (','';')),  
157 (15 , 'primary_expression , ('identifier',) 0 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (16 , 'primary_expression , ('number',) 0 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (17 , 'primary_expression , ('(','expression',')',) 0 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (42 , 'expression , ('constant_expression',) 0 (')')),  (43 , 'expression , ('function_expression',) 0 (')')),  (44 , 'constant_expression , ('primary_expression','arithmetic_expression',) 0 (')')),  (49 , 'function_expression , ('function','identifier','(','expression_list',')',) 0 (')')),  (75 , 'selection_statement , ('if','(','expression',')','statement','else','statement',) 2 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
158 (15 , 'primary_expression , ('identifier',) 0 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (16 , 'primary_expression , ('number',) 0 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (17 , 'primary_expression , ('(','expression',')',) 0 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (42 , 'expression , ('constant_expression',) 0 (')')),  (43 , 'expression , ('function_expression',) 0 (')')),  (44 , 'constant_expression , ('primary_expression','arithmetic_expression',) 0 (')')),  (49 , 'function_expression , ('function','identifier','(','expression_list',')',) 0 (')')),  (70 , 'expression_statement , ('print','(','expression',')',';',) 2 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
159 (15 , 'primary_expression , ('identifier',) 0 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (16 , 'primary_expression , ('number',) 0 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (17 , 'primary_expression , ('(','expression',')',) 0 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (17 , 'primary_expression , ('(','expression',')',) 1 ('%''&''(''*''+''-''/'';''<''<=''>''>=''^''identifier''number')),  (42 , 'expression , ('constant_expression',) 0 (')')),  (43 , 'expression , ('function_expression',) 0 (')')),  (44 , 'constant_expression , ('primary_expression','arithmetic_expression',) 0 (')')),  (49 , 'function_expression , ('function','identifier','(','expression_list',')',) 0 (')')),  
160 (42 , 'expression , ('constant_expression',) 1 (';')),  
161 (74 , 'jump_statement , ('return','expression',';',) 2 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
162 (49 , 'function_expression , ('function','identifier','(','expression_list',')',) 1 (';')),  
163 (43 , 'expression , ('function_expression',) 1 (';')),  
164 (15 , 'primary_expression , ('identifier',) 1 ('%''&''(''*''+''-''/'';''<''<=''>''>=''^''identifier''number')),  
165 (16 , 'primary_expression , ('number',) 1 ('%''&''(''*''+''-''/'';''<''<=''>''>=''^''identifier''number')),  
166 (15 , 'primary_expression , ('identifier',) 0 ('%''&''(''*''+''-''/'';''<''<=''>''>=''^''identifier''number')),  (16 , 'primary_expression , ('number',) 0 ('%''&''(''*''+''-''/'';''<''<=''>''>=''^''identifier''number')),  (17 , 'primary_expression , ('(','expression',')',) 0 ('%''&''(''*''+''-''/'';''<''<=''>''>=''^''identifier''number')),  (18 , 'operator , ('+',) 0 (';')),  (18 , 'operator , ('+',) 0 ('(''identifier''number')),  (19 , 'operator , ('-',) 0 (';')),  (19 , 'operator , ('-',) 0 ('(''identifier''number')),  (20 , 'operator , ('*',) 0 (';')),  (20 , 'operator , ('*',) 0 ('(''identifier''number')),  (21 , 'operator , ('/',) 0 (';')),  (21 , 'operator , ('/',) 0 ('(''identifier''number')),  (22 , 'operator , ('%',) 0 (';')),  (22 , 'operator , ('%',) 0 ('(''identifier''number')),  (23 , 'operator , ('<',) 0 (';')),  (23 , 'operator , ('<',) 0 ('(''identifier''number')),  (24 , 'operator , ('>',) 0 (';')),  (24 , 'operator , ('>',) 0 ('(''identifier''number')),  (25 , 'operator , ('^',) 0 (';')),  (25 , 'operator , ('^',) 0 ('(''identifier''number')),  (26 , 'operator , ('&',) 0 (';')),  (26 , 'operator , ('&',) 0 ('(''identifier''number')),  (27 , 'operator , ('<=',) 0 (';')),  (27 , 'operator , ('<=',) 0 ('(''identifier''number')),  (28 , 'operator , ('>=',) 0 (';')),  (28 , 'operator , ('>=',) 0 ('(''identifier''number')),  (44 , 'constant_expression , ('primary_expression','arithmetic_expression',) 1 (';')),  (45 , 'arithmetic_expression , ('operator',) 0 (';')),  (46 , 'arithmetic_expression , ('primary_expression','arithmetic_expression',) 0 (';')),  (47 , 'arithmetic_expression , ('operator','primary_expression','arithmetic_expression',) 0 (';')),  (48 , 'arithmetic_expression , ('$',) 0 (';')),  
167 (71 , 'expression_statement , ('scanf','(','identifier',')',';',) 2 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
168 (61 , 'statement_list , ('statement','statement_list',) 2 ('}')),  
169 (60 , 'compound_statement , ('{','statement_list','}',) 3 ('#''char''double''float''function''int')),  
170 (9 , 'declaration , ('type_specifier','declaration_parameter','declaration_parameter_suffix',';',) 2 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (13 , 'declaration_parameter_suffix , (',','declaration_parameter','declaration_parameter_suffix',) 0 (';')),  (14 , 'declaration_parameter_suffix , ('$',) 0 (';')),  
171 (15 , 'primary_expression , ('identifier',) 0 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (16 , 'primary_expression , ('number',) 0 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (17 , 'primary_expression , ('(','expression',')',) 0 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (42 , 'expression , ('constant_expression',) 0 (')')),  (43 , 'expression , ('function_expression',) 0 (')')),  (44 , 'constant_expression , ('primary_expression','arithmetic_expression',) 0 (')')),  (49 , 'function_expression , ('function','identifier','(','expression_list',')',) 0 (')')),  (76 , 'iteration_statement , ('while','(','expression',')','statement',) 2 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
172 (60 , 'compound_statement , ('{','statement_list','}',) 2 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
173 (49 , 'function_expression , ('function','identifier','(','expression_list',')',) 5 (')')),  
174 (17 , 'primary_expression , ('(','expression',')',) 3 ('%''&''('')''*''+'',''-''/''<''<=''>''>=''^''identifier''number')),  
175 (50 , 'expression_list_suffix , (',','expression','expression_list_suffix',) 0 (')')),  (50 , 'expression_list_suffix , (',','expression','expression_list_suffix',) 2 (')')),  (51 , 'expression_list_suffix , ('$',) 0 (')')),  
176 (15 , 'primary_expression , ('identifier',) 0 ('%''&''('')''*''+'',''-''/''<''<=''>''>=''^''identifier''number')),  (16 , 'primary_expression , ('number',) 0 ('%''&''('')''*''+'',''-''/''<''<=''>''>=''^''identifier''number')),  (17 , 'primary_expression , ('(','expression',')',) 0 ('%''&''('')''*''+'',''-''/''<''<=''>''>=''^''identifier''number')),  (42 , 'expression , ('constant_expression',) 0 (')'',')),  (43 , 'expression , ('function_expression',) 0 (')'',')),  (44 , 'constant_expression , ('primary_expression','arithmetic_expression',) 0 (')'',')),  (49 , 'function_expression , ('function','identifier','(','expression_list',')',) 0 (')'',')),  (49 , 'function_expression , ('function','identifier','(','expression_list',')',) 3 (')'',')),  (52 , 'expression_list , ('expression','expression_list_suffix',) 0 (')')),  (53 , 'expression_list , ('$',) 0 (')')),  
177 (15 , 'primary_expression , ('identifier',) 0 ('%''&''('')''*''+'',''-''/''<''<=''>''>=''^''identifier''number')),  (16 , 'primary_expression , ('number',) 0 ('%''&''('')''*''+'',''-''/''<''<=''>''>=''^''identifier''number')),  (17 , 'primary_expression , ('(','expression',')',) 0 ('%''&''('')''*''+'',''-''/''<''<=''>''>=''^''identifier''number')),  (18 , 'operator , ('+',) 0 (')'',')),  (18 , 'operator , ('+',) 0 ('(''identifier''number')),  (19 , 'operator , ('-',) 0 (')'',')),  (19 , 'operator , ('-',) 0 ('(''identifier''number')),  (20 , 'operator , ('*',) 0 (')'',')),  (20 , 'operator , ('*',) 0 ('(''identifier''number')),  (21 , 'operator , ('/',) 0 (')'',')),  (21 , 'operator , ('/',) 0 ('(''identifier''number')),  (22 , 'operator , ('%',) 0 (')'',')),  (22 , 'operator , ('%',) 0 ('(''identifier''number')),  (23 , 'operator , ('<',) 0 (')'',')),  (23 , 'operator , ('<',) 0 ('(''identifier''number')),  (24 , 'operator , ('>',) 0 (')'',')),  (24 , 'operator , ('>',) 0 ('(''identifier''number')),  (25 , 'operator , ('^',) 0 (')'',')),  (25 , 'operator , ('^',) 0 ('(''identifier''number')),  (26 , 'operator , ('&',) 0 (')'',')),  (26 , 'operator , ('&',) 0 ('(''identifier''number')),  (27 , 'operator , ('<=',) 0 (')'',')),  (27 , 'operator , ('<=',) 0 ('(''identifier''number')),  (28 , 'operator , ('>=',) 0 (')'',')),  (28 , 'operator , ('>=',) 0 ('(''identifier''number')),  (45 , 'arithmetic_expression , ('operator',) 0 (')'',')),  (46 , 'arithmetic_expression , ('primary_expression','arithmetic_expression',) 0 (')'',')),  (47 , 'arithmetic_expression , ('operator','primary_expression','arithmetic_expression',) 0 (')'',')),  (47 , 'arithmetic_expression , ('operator','primary_expression','arithmetic_expression',) 2 (')'',')),  (48 , 'arithmetic_expression , ('$',) 0 (')'',')),  
178 (46 , 'arithmetic_expression , ('primary_expression','arithmetic_expression',) 2 (')'',')),  
179 (38 , 'assignment_expression_list_suffix , (',','assignment_expression','assignment_expression_list_suffix',) 0 (';')),  (38 , 'assignment_expression_list_suffix , (',','assignment_expression','assignment_expression_list_suffix',) 2 (';')),  (39 , 'assignment_expression_list_suffix , ('$',) 0 (';')),  
180 (15 , 'primary_expression , ('identifier',) 0 ('%''&''(''*''+''-''/'';''<''<=''>''>=''^''identifier''number')),  (16 , 'primary_expression , ('number',) 0 ('%''&''(''*''+''-''/'';''<''<=''>''>=''^''identifier''number')),  (17 , 'primary_expression , ('(','expression',')',) 0 ('%''&''(''*''+''-''/'';''<''<=''>''>=''^''identifier''number')),  (42 , 'expression , ('constant_expression',) 0 (';')),  (43 , 'expression , ('function_expression',) 0 (';')),  (44 , 'constant_expression , ('primary_expression','arithmetic_expression',) 0 (';')),  (49 , 'function_expression , ('function','identifier','(','expression_list',')',) 0 (';')),  (77 , 'iteration_statement , ('for','(','declaration','expression',';','assignment_expression',')','statement',) 3 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
181 (9 , 'declaration , ('type_specifier','declaration_parameter','declaration_parameter_suffix',';',) 1 ('(''function''identifier''number')),  (10 , 'declaration_parameter , ('identifier','declaration_parameter_assign',) 0 (','';')),  
182 (34 , 'assignment_operator , ('%','=',) 2 ('(''function''identifier''number')),  
183 (36 , 'assignment_operator , ('&','=',) 2 ('(''function''identifier''number')),  
184 (32 , 'assignment_operator , ('*','=',) 2 ('(''function''identifier''number')),  
185 (30 , 'assignment_operator , ('+','=',) 2 ('(''function''identifier''number')),  
186 (31 , 'assignment_operator , ('-','=',) 2 ('(''function''identifier''number')),  
187 (33 , 'assignment_operator , ('/','=',) 2 ('(''function''identifier''number')),  
188 (35 , 'assignment_operator , ('^','=',) 2 ('(''function''identifier''number')),  
189 (37 , 'assignment_expression , ('identifier','assignment_operator','expression',) 3 (','';')),  
190 (75 , 'selection_statement , ('if','(','expression',')','statement','else','statement',) 3 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
191 (70 , 'expression_statement , ('print','(','expression',')',';',) 3 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
192 (17 , 'primary_expression , ('(','expression',')',) 2 ('%''&''(''*''+''-''/'';''<''<=''>''>=''^''identifier''number')),  
193 (74 , 'jump_statement , ('return','expression',';',) 3 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
194 (49 , 'function_expression , ('function','identifier','(','expression_list',')',) 2 (';')),  
195 (22 , 'operator , ('%',) 1 (';')),  (22 , 'operator , ('%',) 1 ('(''identifier''number')),  
196 (26 , 'operator , ('&',) 1 (';')),  (26 , 'operator , ('&',) 1 ('(''identifier''number')),  
197 (20 , 'operator , ('*',) 1 (';')),  (20 , 'operator , ('*',) 1 ('(''identifier''number')),  
198 (18 , 'operator , ('+',) 1 (';')),  (18 , 'operator , ('+',) 1 ('(''identifier''number')),  
199 (19 , 'operator , ('-',) 1 (';')),  (19 , 'operator , ('-',) 1 ('(''identifier''number')),  
200 (21 , 'operator , ('/',) 1 (';')),  (21 , 'operator , ('/',) 1 ('(''identifier''number')),  
201 (23 , 'operator , ('<',) 1 (';')),  (23 , 'operator , ('<',) 1 ('(''identifier''number')),  
202 (27 , 'operator , ('<=',) 1 (';')),  (27 , 'operator , ('<=',) 1 ('(''identifier''number')),  
203 (24 , 'operator , ('>',) 1 (';')),  (24 , 'operator , ('>',) 1 ('(''identifier''number')),  
204 (28 , 'operator , ('>=',) 1 (';')),  (28 , 'operator , ('>=',) 1 ('(''identifier''number')),  
205 (25 , 'operator , ('^',) 1 (';')),  (25 , 'operator , ('^',) 1 ('(''identifier''number')),  
206 (44 , 'constant_expression , ('primary_expression','arithmetic_expression',) 2 (';')),  
207 (15 , 'primary_expression , ('identifier',) 0 ('%''&''(''*''+''-''/'';''<''<=''>''>=''^''identifier''number')),  (16 , 'primary_expression , ('number',) 0 ('%''&''(''*''+''-''/'';''<''<=''>''>=''^''identifier''number')),  (17 , 'primary_expression , ('(','expression',')',) 0 ('%''&''(''*''+''-''/'';''<''<=''>''>=''^''identifier''number')),  (45 , 'arithmetic_expression , ('operator',) 1 (';')),  (47 , 'arithmetic_expression , ('operator','primary_expression','arithmetic_expression',) 1 (';')),  
208 (15 , 'primary_expression , ('identifier',) 0 ('%''&''(''*''+''-''/'';''<''<=''>''>=''^''identifier''number')),  (16 , 'primary_expression , ('number',) 0 ('%''&''(''*''+''-''/'';''<''<=''>''>=''^''identifier''number')),  (17 , 'primary_expression , ('(','expression',')',) 0 ('%''&''(''*''+''-''/'';''<''<=''>''>=''^''identifier''number')),  (18 , 'operator , ('+',) 0 (';')),  (18 , 'operator , ('+',) 0 ('(''identifier''number')),  (19 , 'operator , ('-',) 0 (';')),  (19 , 'operator , ('-',) 0 ('(''identifier''number')),  (20 , 'operator , ('*',) 0 (';')),  (20 , 'operator , ('*',) 0 ('(''identifier''number')),  (21 , 'operator , ('/',) 0 (';')),  (21 , 'operator , ('/',) 0 ('(''identifier''number')),  (22 , 'operator , ('%',) 0 (';')),  (22 , 'operator , ('%',) 0 ('(''identifier''number')),  (23 , 'operator , ('<',) 0 (';')),  (23 , 'operator , ('<',) 0 ('(''identifier''number')),  (24 , 'operator , ('>',) 0 (';')),  (24 , 'operator , ('>',) 0 ('(''identifier''number')),  (25 , 'operator , ('^',) 0 (';')),  (25 , 'operator , ('^',) 0 ('(''identifier''number')),  (26 , 'operator , ('&',) 0 (';')),  (26 , 'operator , ('&',) 0 ('(''identifier''number')),  (27 , 'operator , ('<=',) 0 (';')),  (27 , 'operator , ('<=',) 0 ('(''identifier''number')),  (28 , 'operator , ('>=',) 0 (';')),  (28 , 'operator , ('>=',) 0 ('(''identifier''number')),  (45 , 'arithmetic_expression , ('operator',) 0 (';')),  (46 , 'arithmetic_expression , ('primary_expression','arithmetic_expression',) 0 (';')),  (46 , 'arithmetic_expression , ('primary_expression','arithmetic_expression',) 1 (';')),  (47 , 'arithmetic_expression , ('operator','primary_expression','arithmetic_expression',) 0 (';')),  (48 , 'arithmetic_expression , ('$',) 0 (';')),  
209 (71 , 'expression_statement , ('scanf','(','identifier',')',';',) 3 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
210 (9 , 'declaration , ('type_specifier','declaration_parameter','declaration_parameter_suffix',';',) 3 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
211 (76 , 'iteration_statement , ('while','(','expression',')','statement',) 3 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
212 (60 , 'compound_statement , ('{','statement_list','}',) 3 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
213 (50 , 'expression_list_suffix , (',','expression','expression_list_suffix',) 3 (')')),  
214 (49 , 'function_expression , ('function','identifier','(','expression_list',')',) 4 (')'',')),  
215 (47 , 'arithmetic_expression , ('operator','primary_expression','arithmetic_expression',) 3 (')'',')),  
216 (38 , 'assignment_expression_list_suffix , (',','assignment_expression','assignment_expression_list_suffix',) 3 (';')),  
217 (77 , 'iteration_statement , ('for','(','declaration','expression',';','assignment_expression',')','statement',) 4 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
218 (9 , 'declaration , ('type_specifier','declaration_parameter','declaration_parameter_suffix',';',) 2 ('(''function''identifier''number')),  (13 , 'declaration_parameter_suffix , (',','declaration_parameter','declaration_parameter_suffix',) 0 (';')),  (14 , 'declaration_parameter_suffix , ('$',) 0 (';')),  
219 (5 , 'type_specifier , ('int',) 0 ('identifier')),  (6 , 'type_specifier , ('float',) 0 ('identifier')),  (7 , 'type_specifier , ('double',) 0 ('identifier')),  (8 , 'type_specifier , ('char',) 0 ('identifier')),  (9 , 'declaration , ('type_specifier','declaration_parameter','declaration_parameter_suffix',';',) 0 ('else')),  (37 , 'assignment_expression , ('identifier','assignment_operator','expression',) 0 (','';')),  (40 , 'assignment_expression_list , ('assignment_expression','assignment_expression_list_suffix',) 0 (';')),  (41 , 'assignment_expression_list , ('$',) 0 (';')),  (60 , 'compound_statement , ('{','statement_list','}',) 0 ('else')),  (63 , 'statement , ('expression_statement',) 0 ('else')),  (64 , 'statement , ('jump_statement',) 0 ('else')),  (65 , 'statement , ('selection_statement',) 0 ('else')),  (66 , 'statement , ('iteration_statement',) 0 ('else')),  (67 , 'statement , ('compound_statement',) 0 ('else')),  (68 , 'statement , ('declaration',) 0 ('else')),  (69 , 'expression_statement , ('assignment_expression_list',';',) 0 ('else')),  (70 , 'expression_statement , ('print','(','expression',')',';',) 0 ('else')),  (71 , 'expression_statement , ('scanf','(','identifier',')',';',) 0 ('else')),  (72 , 'jump_statement , ('continue',';',) 0 ('else')),  (73 , 'jump_statement , ('break',';',) 0 ('else')),  (74 , 'jump_statement , ('return','expression',';',) 0 ('else')),  (75 , 'selection_statement , ('if','(','expression',')','statement','else','statement',) 0 ('else')),  (75 , 'selection_statement , ('if','(','expression',')','statement','else','statement',) 4 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (76 , 'iteration_statement , ('while','(','expression',')','statement',) 0 ('else')),  (77 , 'iteration_statement , ('for','(','declaration','expression',';','assignment_expression',')','statement',) 0 ('else')),  
220 (70 , 'expression_statement , ('print','(','expression',')',';',) 4 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
221 (17 , 'primary_expression , ('(','expression',')',) 3 ('%''&''(''*''+''-''/'';''<''<=''>''>=''^''identifier''number')),  
222 (15 , 'primary_expression , ('identifier',) 0 ('%''&''('')''*''+'',''-''/''<''<=''>''>=''^''identifier''number')),  (16 , 'primary_expression , ('number',) 0 ('%''&''('')''*''+'',''-''/''<''<=''>''>=''^''identifier''number')),  (17 , 'primary_expression , ('(','expression',')',) 0 ('%''&''('')''*''+'',''-''/''<''<=''>''>=''^''identifier''number')),  (42 , 'expression , ('constant_expression',) 0 (')'',')),  (43 , 'expression , ('function_expression',) 0 (')'',')),  (44 , 'constant_expression , ('primary_expression','arithmetic_expression',) 0 (')'',')),  (49 , 'function_expression , ('function','identifier','(','expression_list',')',) 0 (')'',')),  (49 , 'function_expression , ('function','identifier','(','expression_list',')',) 3 (';')),  (52 , 'expression_list , ('expression','expression_list_suffix',) 0 (')')),  (53 , 'expression_list , ('$',) 0 (')')),  
223 (15 , 'primary_expression , ('identifier',) 0 ('%''&''(''*''+''-''/'';''<''<=''>''>=''^''identifier''number')),  (16 , 'primary_expression , ('number',) 0 ('%''&''(''*''+''-''/'';''<''<=''>''>=''^''identifier''number')),  (17 , 'primary_expression , ('(','expression',')',) 0 ('%''&''(''*''+''-''/'';''<''<=''>''>=''^''identifier''number')),  (18 , 'operator , ('+',) 0 (';')),  (18 , 'operator , ('+',) 0 ('(''identifier''number')),  (19 , 'operator , ('-',) 0 (';')),  (19 , 'operator , ('-',) 0 ('(''identifier''number')),  (20 , 'operator , ('*',) 0 (';')),  (20 , 'operator , ('*',) 0 ('(''identifier''number')),  (21 , 'operator , ('/',) 0 (';')),  (21 , 'operator , ('/',) 0 ('(''identifier''number')),  (22 , 'operator , ('%',) 0 (';')),  (22 , 'operator , ('%',) 0 ('(''identifier''number')),  (23 , 'operator , ('<',) 0 (';')),  (23 , 'operator , ('<',) 0 ('(''identifier''number')),  (24 , 'operator , ('>',) 0 (';')),  (24 , 'operator , ('>',) 0 ('(''identifier''number')),  (25 , 'operator , ('^',) 0 (';')),  (25 , 'operator , ('^',) 0 ('(''identifier''number')),  (26 , 'operator , ('&',) 0 (';')),  (26 , 'operator , ('&',) 0 ('(''identifier''number')),  (27 , 'operator , ('<=',) 0 (';')),  (27 , 'operator , ('<=',) 0 ('(''identifier''number')),  (28 , 'operator , ('>=',) 0 (';')),  (28 , 'operator , ('>=',) 0 ('(''identifier''number')),  (45 , 'arithmetic_expression , ('operator',) 0 (';')),  (46 , 'arithmetic_expression , ('primary_expression','arithmetic_expression',) 0 (';')),  (47 , 'arithmetic_expression , ('operator','primary_expression','arithmetic_expression',) 0 (';')),  (47 , 'arithmetic_expression , ('operator','primary_expression','arithmetic_expression',) 2 (';')),  (48 , 'arithmetic_expression , ('$',) 0 (';')),  
224 (46 , 'arithmetic_expression , ('primary_expression','arithmetic_expression',) 2 (';')),  
225 (71 , 'expression_statement , ('scanf','(','identifier',')',';',) 4 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
226 (9 , 'declaration , ('type_specifier','declaration_parameter','declaration_parameter_suffix',';',) 4 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
227 (5 , 'type_specifier , ('int',) 0 ('identifier')),  (6 , 'type_specifier , ('float',) 0 ('identifier')),  (7 , 'type_specifier , ('double',) 0 ('identifier')),  (8 , 'type_specifier , ('char',) 0 ('identifier')),  (9 , 'declaration , ('type_specifier','declaration_parameter','declaration_parameter_suffix',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (37 , 'assignment_expression , ('identifier','assignment_operator','expression',) 0 (','';')),  (40 , 'assignment_expression_list , ('assignment_expression','assignment_expression_list_suffix',) 0 (';')),  (41 , 'assignment_expression_list , ('$',) 0 (';')),  (60 , 'compound_statement , ('{','statement_list','}',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (63 , 'statement , ('expression_statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (64 , 'statement , ('jump_statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (65 , 'statement , ('selection_statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (66 , 'statement , ('iteration_statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (67 , 'statement , ('compound_statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (68 , 'statement , ('declaration',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (69 , 'expression_statement , ('assignment_expression_list',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (70 , 'expression_statement , ('print','(','expression',')',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (71 , 'expression_statement , ('scanf','(','identifier',')',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (72 , 'jump_statement , ('continue',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (73 , 'jump_statement , ('break',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (74 , 'jump_statement , ('return','expression',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (75 , 'selection_statement , ('if','(','expression',')','statement','else','statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (76 , 'iteration_statement , ('while','(','expression',')','statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (76 , 'iteration_statement , ('while','(','expression',')','statement',) 4 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (77 , 'iteration_statement , ('for','(','declaration','expression',';','assignment_expression',')','statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
228 (49 , 'function_expression , ('function','identifier','(','expression_list',')',) 5 (')'',')),  
229 (37 , 'assignment_expression , ('identifier','assignment_operator','expression',) 0 (')')),  (77 , 'iteration_statement , ('for','(','declaration','expression',';','assignment_expression',')','statement',) 5 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
230 (9 , 'declaration , ('type_specifier','declaration_parameter','declaration_parameter_suffix',';',) 3 ('(''function''identifier''number')),  
231 (69 , 'expression_statement , ('assignment_expression_list',';',) 1 ('else')),  
232 (73 , 'jump_statement , ('break',';',) 1 ('else')),  
233 (67 , 'statement , ('compound_statement',) 1 ('else')),  
234 (72 , 'jump_statement , ('continue',';',) 1 ('else')),  
235 (68 , 'statement , ('declaration',) 1 ('else')),  
236 (63 , 'statement , ('expression_statement',) 1 ('else')),  
237 (77 , 'iteration_statement , ('for','(','declaration','expression',';','assignment_expression',')','statement',) 1 ('else')),  
238 (75 , 'selection_statement , ('if','(','expression',')','statement','else','statement',) 1 ('else')),  
239 (66 , 'statement , ('iteration_statement',) 1 ('else')),  
240 (64 , 'statement , ('jump_statement',) 1 ('else')),  
241 (70 , 'expression_statement , ('print','(','expression',')',';',) 1 ('else')),  
242 (15 , 'primary_expression , ('identifier',) 0 ('%''&''(''*''+''-''/'';''<''<=''>''>=''^''identifier''number')),  (16 , 'primary_expression , ('number',) 0 ('%''&''(''*''+''-''/'';''<''<=''>''>=''^''identifier''number')),  (17 , 'primary_expression , ('(','expression',')',) 0 ('%''&''(''*''+''-''/'';''<''<=''>''>=''^''identifier''number')),  (42 , 'expression , ('constant_expression',) 0 (';')),  (43 , 'expression , ('function_expression',) 0 (';')),  (44 , 'constant_expression , ('primary_expression','arithmetic_expression',) 0 (';')),  (49 , 'function_expression , ('function','identifier','(','expression_list',')',) 0 (';')),  (74 , 'jump_statement , ('return','expression',';',) 1 ('else')),  
243 (71 , 'expression_statement , ('scanf','(','identifier',')',';',) 1 ('else')),  
244 (65 , 'statement , ('selection_statement',) 1 ('else')),  
245 (75 , 'selection_statement , ('if','(','expression',')','statement','else','statement',) 5 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
246 (9 , 'declaration , ('type_specifier','declaration_parameter','declaration_parameter_suffix',';',) 1 ('else')),  (10 , 'declaration_parameter , ('identifier','declaration_parameter_assign',) 0 (','';')),  
247 (76 , 'iteration_statement , ('while','(','expression',')','statement',) 1 ('else')),  
248 (5 , 'type_specifier , ('int',) 0 ('identifier')),  (6 , 'type_specifier , ('float',) 0 ('identifier')),  (7 , 'type_specifier , ('double',) 0 ('identifier')),  (8 , 'type_specifier , ('char',) 0 ('identifier')),  (9 , 'declaration , ('type_specifier','declaration_parameter','declaration_parameter_suffix',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (37 , 'assignment_expression , ('identifier','assignment_operator','expression',) 0 (','';')),  (40 , 'assignment_expression_list , ('assignment_expression','assignment_expression_list_suffix',) 0 (';')),  (41 , 'assignment_expression_list , ('$',) 0 (';')),  (60 , 'compound_statement , ('{','statement_list','}',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (60 , 'compound_statement , ('{','statement_list','}',) 1 ('else')),  (61 , 'statement_list , ('statement','statement_list',) 0 ('}')),  (62 , 'statement_list , ('$',) 0 ('}')),  (63 , 'statement , ('expression_statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (64 , 'statement , ('jump_statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (65 , 'statement , ('selection_statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (66 , 'statement , ('iteration_statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (67 , 'statement , ('compound_statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (68 , 'statement , ('declaration',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (69 , 'expression_statement , ('assignment_expression_list',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (70 , 'expression_statement , ('print','(','expression',')',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (71 , 'expression_statement , ('scanf','(','identifier',')',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (72 , 'jump_statement , ('continue',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (73 , 'jump_statement , ('break',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (74 , 'jump_statement , ('return','expression',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (75 , 'selection_statement , ('if','(','expression',')','statement','else','statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (76 , 'iteration_statement , ('while','(','expression',')','statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (77 , 'iteration_statement , ('for','(','declaration','expression',';','assignment_expression',')','statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
249 (70 , 'expression_statement , ('print','(','expression',')',';',) 5 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
250 (49 , 'function_expression , ('function','identifier','(','expression_list',')',) 4 (';')),  
251 (47 , 'arithmetic_expression , ('operator','primary_expression','arithmetic_expression',) 3 (';')),  
252 (71 , 'expression_statement , ('scanf','(','identifier',')',';',) 5 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
253 (76 , 'iteration_statement , ('while','(','expression',')','statement',) 5 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
254 (77 , 'iteration_statement , ('for','(','declaration','expression',';','assignment_expression',')','statement',) 6 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
255 (29 , 'assignment_operator , ('=',) 0 ('(''function''identifier''number')),  (30 , 'assignment_operator , ('+','=',) 0 ('(''function''identifier''number')),  (31 , 'assignment_operator , ('-','=',) 0 ('(''function''identifier''number')),  (32 , 'assignment_operator , ('*','=',) 0 ('(''function''identifier''number')),  (33 , 'assignment_operator , ('/','=',) 0 ('(''function''identifier''number')),  (34 , 'assignment_operator , ('%','=',) 0 ('(''function''identifier''number')),  (35 , 'assignment_operator , ('^','=',) 0 ('(''function''identifier''number')),  (36 , 'assignment_operator , ('&','=',) 0 ('(''function''identifier''number')),  (37 , 'assignment_expression , ('identifier','assignment_operator','expression',) 1 (')')),  
256 (9 , 'declaration , ('type_specifier','declaration_parameter','declaration_parameter_suffix',';',) 4 ('(''function''identifier''number')),  
257 (69 , 'expression_statement , ('assignment_expression_list',';',) 2 ('else')),  
258 (73 , 'jump_statement , ('break',';',) 2 ('else')),  
259 (72 , 'jump_statement , ('continue',';',) 2 ('else')),  
260 (5 , 'type_specifier , ('int',) 0 ('identifier')),  (6 , 'type_specifier , ('float',) 0 ('identifier')),  (7 , 'type_specifier , ('double',) 0 ('identifier')),  (8 , 'type_specifier , ('char',) 0 ('identifier')),  (9 , 'declaration , ('type_specifier','declaration_parameter','declaration_parameter_suffix',';',) 0 ('(''function''identifier''number')),  (77 , 'iteration_statement , ('for','(','declaration','expression',';','assignment_expression',')','statement',) 2 ('else')),  
261 (15 , 'primary_expression , ('identifier',) 0 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (16 , 'primary_expression , ('number',) 0 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (17 , 'primary_expression , ('(','expression',')',) 0 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (42 , 'expression , ('constant_expression',) 0 (')')),  (43 , 'expression , ('function_expression',) 0 (')')),  (44 , 'constant_expression , ('primary_expression','arithmetic_expression',) 0 (')')),  (49 , 'function_expression , ('function','identifier','(','expression_list',')',) 0 (')')),  (75 , 'selection_statement , ('if','(','expression',')','statement','else','statement',) 2 ('else')),  
262 (15 , 'primary_expression , ('identifier',) 0 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (16 , 'primary_expression , ('number',) 0 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (17 , 'primary_expression , ('(','expression',')',) 0 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (42 , 'expression , ('constant_expression',) 0 (')')),  (43 , 'expression , ('function_expression',) 0 (')')),  (44 , 'constant_expression , ('primary_expression','arithmetic_expression',) 0 (')')),  (49 , 'function_expression , ('function','identifier','(','expression_list',')',) 0 (')')),  (70 , 'expression_statement , ('print','(','expression',')',';',) 2 ('else')),  
263 (74 , 'jump_statement , ('return','expression',';',) 2 ('else')),  
264 (71 , 'expression_statement , ('scanf','(','identifier',')',';',) 2 ('else')),  
265 (5 , 'type_specifier , ('int',) 0 ('identifier')),  (6 , 'type_specifier , ('float',) 0 ('identifier')),  (7 , 'type_specifier , ('double',) 0 ('identifier')),  (8 , 'type_specifier , ('char',) 0 ('identifier')),  (9 , 'declaration , ('type_specifier','declaration_parameter','declaration_parameter_suffix',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (37 , 'assignment_expression , ('identifier','assignment_operator','expression',) 0 (','';')),  (40 , 'assignment_expression_list , ('assignment_expression','assignment_expression_list_suffix',) 0 (';')),  (41 , 'assignment_expression_list , ('$',) 0 (';')),  (60 , 'compound_statement , ('{','statement_list','}',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (63 , 'statement , ('expression_statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (64 , 'statement , ('jump_statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (65 , 'statement , ('selection_statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (66 , 'statement , ('iteration_statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (67 , 'statement , ('compound_statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (68 , 'statement , ('declaration',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (69 , 'expression_statement , ('assignment_expression_list',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (70 , 'expression_statement , ('print','(','expression',')',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (71 , 'expression_statement , ('scanf','(','identifier',')',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (72 , 'jump_statement , ('continue',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (73 , 'jump_statement , ('break',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (74 , 'jump_statement , ('return','expression',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (75 , 'selection_statement , ('if','(','expression',')','statement','else','statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (75 , 'selection_statement , ('if','(','expression',')','statement','else','statement',) 6 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (76 , 'iteration_statement , ('while','(','expression',')','statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (77 , 'iteration_statement , ('for','(','declaration','expression',';','assignment_expression',')','statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
266 (9 , 'declaration , ('type_specifier','declaration_parameter','declaration_parameter_suffix',';',) 2 ('else')),  (13 , 'declaration_parameter_suffix , (',','declaration_parameter','declaration_parameter_suffix',) 0 (';')),  (14 , 'declaration_parameter_suffix , ('$',) 0 (';')),  
267 (15 , 'primary_expression , ('identifier',) 0 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (16 , 'primary_expression , ('number',) 0 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (17 , 'primary_expression , ('(','expression',')',) 0 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (42 , 'expression , ('constant_expression',) 0 (')')),  (43 , 'expression , ('function_expression',) 0 (')')),  (44 , 'constant_expression , ('primary_expression','arithmetic_expression',) 0 (')')),  (49 , 'function_expression , ('function','identifier','(','expression_list',')',) 0 (')')),  (76 , 'iteration_statement , ('while','(','expression',')','statement',) 2 ('else')),  
268 (60 , 'compound_statement , ('{','statement_list','}',) 2 ('else')),  
269 (49 , 'function_expression , ('function','identifier','(','expression_list',')',) 5 (';')),  
270 (5 , 'type_specifier , ('int',) 0 ('identifier')),  (6 , 'type_specifier , ('float',) 0 ('identifier')),  (7 , 'type_specifier , ('double',) 0 ('identifier')),  (8 , 'type_specifier , ('char',) 0 ('identifier')),  (9 , 'declaration , ('type_specifier','declaration_parameter','declaration_parameter_suffix',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (37 , 'assignment_expression , ('identifier','assignment_operator','expression',) 0 (','';')),  (40 , 'assignment_expression_list , ('assignment_expression','assignment_expression_list_suffix',) 0 (';')),  (41 , 'assignment_expression_list , ('$',) 0 (';')),  (60 , 'compound_statement , ('{','statement_list','}',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (63 , 'statement , ('expression_statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (64 , 'statement , ('jump_statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (65 , 'statement , ('selection_statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (66 , 'statement , ('iteration_statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (67 , 'statement , ('compound_statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (68 , 'statement , ('declaration',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (69 , 'expression_statement , ('assignment_expression_list',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (70 , 'expression_statement , ('print','(','expression',')',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (71 , 'expression_statement , ('scanf','(','identifier',')',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (72 , 'jump_statement , ('continue',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (73 , 'jump_statement , ('break',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (74 , 'jump_statement , ('return','expression',';',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (75 , 'selection_statement , ('if','(','expression',')','statement','else','statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (76 , 'iteration_statement , ('while','(','expression',')','statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (77 , 'iteration_statement , ('for','(','declaration','expression',';','assignment_expression',')','statement',) 0 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  (77 , 'iteration_statement , ('for','(','declaration','expression',';','assignment_expression',')','statement',) 7 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
271 (15 , 'primary_expression , ('identifier',) 0 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (16 , 'primary_expression , ('number',) 0 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (17 , 'primary_expression , ('(','expression',')',) 0 ('%''&''('')''*''+''-''/''<''<=''>''>=''^''identifier''number')),  (37 , 'assignment_expression , ('identifier','assignment_operator','expression',) 2 (')')),  (42 , 'expression , ('constant_expression',) 0 (')')),  (43 , 'expression , ('function_expression',) 0 (')')),  (44 , 'constant_expression , ('primary_expression','arithmetic_expression',) 0 (')')),  (49 , 'function_expression , ('function','identifier','(','expression_list',')',) 0 (')')),  
272 (15 , 'primary_expression , ('identifier',) 0 ('%''&''(''*''+''-''/'';''<''<=''>''>=''^''identifier''number')),  (16 , 'primary_expression , ('number',) 0 ('%''&''(''*''+''-''/'';''<''<=''>''>=''^''identifier''number')),  (17 , 'primary_expression , ('(','expression',')',) 0 ('%''&''(''*''+''-''/'';''<''<=''>''>=''^''identifier''number')),  (42 , 'expression , ('constant_expression',) 0 (';')),  (43 , 'expression , ('function_expression',) 0 (';')),  (44 , 'constant_expression , ('primary_expression','arithmetic_expression',) 0 (';')),  (49 , 'function_expression , ('function','identifier','(','expression_list',')',) 0 (';')),  (77 , 'iteration_statement , ('for','(','declaration','expression',';','assignment_expression',')','statement',) 3 ('else')),  
273 (75 , 'selection_statement , ('if','(','expression',')','statement','else','statement',) 3 ('else')),  
274 (70 , 'expression_statement , ('print','(','expression',')',';',) 3 ('else')),  
275 (74 , 'jump_statement , ('return','expression',';',) 3 ('else')),  
276 (71 , 'expression_statement , ('scanf','(','identifier',')',';',) 3 ('else')),  
277 (75 , 'selection_statement , ('if','(','expression',')','statement','else','statement',) 7 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
278 (9 , 'declaration , ('type_specifier','declaration_parameter','declaration_parameter_suffix',';',) 3 ('else')),  
279 (76 , 'iteration_statement , ('while','(','expression',')','statement',) 3 ('else')),  
280 (60 , 'compound_statement , ('{','statement_list','}',) 3 ('else')),  
281 (77 , 'iteration_statement , ('for','(','declaration','expression',';','assignment_expression',')','statement',) 8 (';''break''char''continue''double''float''for''identifier''if''int''print''return''scanf''while''{''}')),  
282 (37 , 'assignment_expression , ('identifier','assignment_operator','expression',) 3 (')')),  
283 (77 , 'iteration_statement , ('for','(','declaration','expression',';','assignment_expression',')','statement',) 4 ('else')),  
284 (5 , 'type_specifier , ('int',) 0 ('identifier')),  (6 , 'type_specifier , ('float',) 0 ('identifier')),  (7 , 'type_specifier , ('double',) 0 ('identifier')),  (8 , 'type_specifier , ('char',) 0 ('identifier')),  (9 , 'declaration , ('type_specifier','declaration_parameter','declaration_parameter_suffix',';',) 0 ('else')),  (37 , 'assignment_expression , ('identifier','assignment_operator','expression',) 0 (','';')),  (40 , 'assignment_expression_list , ('assignment_expression','assignment_expression_list_suffix',) 0 (';')),  (41 , 'assignment_expression_list , ('$',) 0 (';')),  (60 , 'compound_statement , ('{','statement_list','}',) 0 ('else')),  (63 , 'statement , ('expression_statement',) 0 ('else')),  (64 , 'statement , ('jump_statement',) 0 ('else')),  (65 , 'statement , ('selection_statement',) 0 ('else')),  (66 , 'statement , ('iteration_statement',) 0 ('else')),  (67 , 'statement , ('compound_statement',) 0 ('else')),  (68 , 'statement , ('declaration',) 0 ('else')),  (69 , 'expression_statement , ('assignment_expression_list',';',) 0 ('else')),  (70 , 'expression_statement , ('print','(','expression',')',';',) 0 ('else')),  (71 , 'expression_statement , ('scanf','(','identifier',')',';',) 0 ('else')),  (72 , 'jump_statement , ('continue',';',) 0 ('else')),  (73 , 'jump_statement , ('break',';',) 0 ('else')),  (74 , 'jump_statement , ('return','expression',';',) 0 ('else')),  (75 , 'selection_statement , ('if','(','expression',')','statement','else','statement',) 0 ('else')),  (75 , 'selection_statement , ('if','(','expression',')','statement','else','statement',) 4 ('else')),  (76 , 'iteration_statement , ('while','(','expression',')','statement',) 0 ('else')),  (77 , 'iteration_statement , ('for','(','declaration','expression',';','assignment_expression',')','statement',) 0 ('else')),  
285 (70 , 'expression_statement , ('print','(','expression',')',';',) 4 ('else')),  
286 (71 , 'expression_statement , ('scanf','(','identifier',')',';',) 4 ('else')),  
287 (9 , 'declaration , ('type_specifier','declaration_parameter','declaration_parameter_suffix',';',) 4 ('else')),  
288 (5 , 'type_specifier , ('int',) 0 ('identifier')),  (6 , 'type_specifier , ('float',) 0 ('identifier')),  (7 , 'type_specifier , ('double',) 0 ('identifier')),  (8 , 'type_specifier , ('char',) 0 ('identifier')),  (9 , 'declaration , ('type_specifier','declaration_parameter','declaration_parameter_suffix',';',) 0 ('else')),  (37 , 'assignment_expression , ('identifier','assignment_operator','expression',) 0 (','';')),  (40 , 'assignment_expression_list , ('assignment_expression','assignment_expression_list_suffix',) 0 (';')),  (41 , 'assignment_expression_list , ('$',) 0 (';')),  (60 , 'compound_statement , ('{','statement_list','}',) 0 ('else')),  (63 , 'statement , ('expression_statement',) 0 ('else')),  (64 , 'statement , ('jump_statement',) 0 ('else')),  (65 , 'statement , ('selection_statement',) 0 ('else')),  (66 , 'statement , ('iteration_statement',) 0 ('else')),  (67 , 'statement , ('compound_statement',) 0 ('else')),  (68 , 'statement , ('declaration',) 0 ('else')),  (69 , 'expression_statement , ('assignment_expression_list',';',) 0 ('else')),  (70 , 'expression_statement , ('print','(','expression',')',';',) 0 ('else')),  (71 , 'expression_statement , ('scanf','(','identifier',')',';',) 0 ('else')),  (72 , 'jump_statement , ('continue',';',) 0 ('else')),  (73 , 'jump_statement , ('break',';',) 0 ('else')),  (74 , 'jump_statement , ('return','expression',';',) 0 ('else')),  (75 , 'selection_statement , ('if','(','expression',')','statement','else','statement',) 0 ('else')),  (76 , 'iteration_statement , ('while','(','expression',')','statement',) 0 ('else')),  (76 , 'iteration_statement , ('while','(','expression',')','statement',) 4 ('else')),  (77 , 'iteration_statement , ('for','(','declaration','expression',';','assignment_expression',')','statement',) 0 ('else')),  
289 (37 , 'assignment_expression , ('identifier','assignment_operator','expression',) 0 (')')),  (77 , 'iteration_statement , ('for','(','declaration','expression',';','assignment_expression',')','statement',) 5 ('else')),  
290 (75 , 'selection_statement , ('if','(','expression',')','statement','else','statement',) 5 ('else')),  
291 (70 , 'expression_statement , ('print','(','expression',')',';',) 5 ('else')),  
292 (71 , 'expression_statement , ('scanf','(','identifier',')',';',) 5 ('else')),  
293 (76 , 'iteration_statement , ('while','(','expression',')','statement',) 5 ('else')),  
294 (77 , 'iteration_statement , ('for','(','declaration','expression',';','assignment_expression',')','statement',) 6 ('else')),  
295 (5 , 'type_specifier , ('int',) 0 ('identifier')),  (6 , 'type_specifier , ('float',) 0 ('identifier')),  (7 , 'type_specifier , ('double',) 0 ('identifier')),  (8 , 'type_specifier , ('char',) 0 ('identifier')),  (9 , 'declaration , ('type_specifier','declaration_parameter','declaration_parameter_suffix',';',) 0 ('else')),  (37 , 'assignment_expression , ('identifier','assignment_operator','expression',) 0 (','';')),  (40 , 'assignment_expression_list , ('assignment_expression','assignment_expression_list_suffix',) 0 (';')),  (41 , 'assignment_expression_list , ('$',) 0 (';')),  (60 , 'compound_statement , ('{','statement_list','}',) 0 ('else')),  (63 , 'statement , ('expression_statement',) 0 ('else')),  (64 , 'statement , ('jump_statement',) 0 ('else')),  (65 , 'statement , ('selection_statement',) 0 ('else')),  (66 , 'statement , ('iteration_statement',) 0 ('else')),  (67 , 'statement , ('compound_statement',) 0 ('else')),  (68 , 'statement , ('declaration',) 0 ('else')),  (69 , 'expression_statement , ('assignment_expression_list',';',) 0 ('else')),  (70 , 'expression_statement , ('print','(','expression',')',';',) 0 ('else')),  (71 , 'expression_statement , ('scanf','(','identifier',')',';',) 0 ('else')),  (72 , 'jump_statement , ('continue',';',) 0 ('else')),  (73 , 'jump_statement , ('break',';',) 0 ('else')),  (74 , 'jump_statement , ('return','expression',';',) 0 ('else')),  (75 , 'selection_statement , ('if','(','expression',')','statement','else','statement',) 0 ('else')),  (75 , 'selection_statement , ('if','(','expression',')','statement','else','statement',) 6 ('else')),  (76 , 'iteration_statement , ('while','(','expression',')','statement',) 0 ('else')),  (77 , 'iteration_statement , ('for','(','declaration','expression',';','assignment_expression',')','statement',) 0 ('else')),  
296 (5 , 'type_specifier , ('int',) 0 ('identifier')),  (6 , 'type_specifier , ('float',) 0 ('identifier')),  (7 , 'type_specifier , ('double',) 0 ('identifier')),  (8 , 'type_specifier , ('char',) 0 ('identifier')),  (9 , 'declaration , ('type_specifier','declaration_parameter','declaration_parameter_suffix',';',) 0 ('else')),  (37 , 'assignment_expression , ('identifier','assignment_operator','expression',) 0 (','';')),  (40 , 'assignment_expression_list , ('assignment_expression','assignment_expression_list_suffix',) 0 (';')),  (41 , 'assignment_expression_list , ('$',) 0 (';')),  (60 , 'compound_statement , ('{','statement_list','}',) 0 ('else')),  (63 , 'statement , ('expression_statement',) 0 ('else')),  (64 , 'statement , ('jump_statement',) 0 ('else')),  (65 , 'statement , ('selection_statement',) 0 ('else')),  (66 , 'statement , ('iteration_statement',) 0 ('else')),  (67 , 'statement , ('compound_statement',) 0 ('else')),  (68 , 'statement , ('declaration',) 0 ('else')),  (69 , 'expression_statement , ('assignment_expression_list',';',) 0 ('else')),  (70 , 'expression_statement , ('print','(','expression',')',';',) 0 ('else')),  (71 , 'expression_statement , ('scanf','(','identifier',')',';',) 0 ('else')),  (72 , 'jump_statement , ('continue',';',) 0 ('else')),  (73 , 'jump_statement , ('break',';',) 0 ('else')),  (74 , 'jump_statement , ('return','expression',';',) 0 ('else')),  (75 , 'selection_statement , ('if','(','expression',')','statement','else','statement',) 0 ('else')),  (76 , 'iteration_statement , ('while','(','expression',')','statement',) 0 ('else')),  (77 , 'iteration_statement , ('for','(','declaration','expression',';','assignment_expression',')','statement',) 0 ('else')),  (77 , 'iteration_statement , ('for','(','declaration','expression',';','assignment_expression',')','statement',) 7 ('else')),  
297 (75 , 'selection_statement , ('if','(','expression',')','statement','else','statement',) 7 ('else')),  
298 (77 , 'iteration_statement , ('for','(','declaration','expression',';','assignment_expression',')','statement',) 8 ('else')),  
